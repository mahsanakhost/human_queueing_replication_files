(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    259155,       5429]
NotebookOptionsPosition[    256302,       5333]
NotebookOutlinePosition[    256843,       5354]
CellTagsIndexPosition[    256800,       5351]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "w1N", ",", "w2N", ",", "w3N", ",", "mu1N", ",", "mu1Half", ",", "mu2N", 
   ",", "mu2Half", ",", "mu2Full", ",", "mu3N", ",", "mu3Half", ",", "f", ",",
    "\[Epsilon]"}], "]"}]], "Input",
 CellChangeTimes->{{3.746556266376385*^9, 3.7465562680320196`*^9}, {
  3.766505143356369*^9, 3.7665051435283546`*^9}, {3.7665071100416965`*^9, 
  3.766507118135009*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"This", " ", "sheet", " ", "shows", " ", "that", " ", "TH", 
     RowBox[{"(", 
      RowBox[{"w1", ",", "w2", ",", "w3"}], ")"}]}], "\[NotEqual]", 
    RowBox[{"TH", 
     RowBox[{"(", 
      RowBox[{"w3", ",", "w2", ",", "w1"}], ")"}], " ", "particularly", " ", 
     "if", " ", "w1"}], ">", 
    RowBox[{"w3", " ", "TH", 
     RowBox[{"(", 
      RowBox[{"w1", ",", "w2", ",", "w3"}], ")"}]}], ">", 
    RowBox[{"TH", 
     RowBox[{"(", 
      RowBox[{"w3", ",", "w2", ",", "w1"}], ")"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"mu1N", ":=", 
    RowBox[{"1", "/", "w1N"}]}], "\[IndentingNewLine]", 
   RowBox[{"mu1Half", ":=", 
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"w1N", "-", 
       RowBox[{"f", " ", 
        RowBox[{"w1N", "/", "2"}]}]}], ")"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"mu2N", ":=", "1"}], "\[IndentingNewLine]", 
   RowBox[{"mu2Half", ":=", 
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"f", "/", "2"}]}], ")"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"mu2Full", ":=", 
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", "f"}], ")"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"mu3N", ":=", 
    RowBox[{"1", "/", "w3N"}]}], "\[IndentingNewLine]", 
   RowBox[{"mu3Half", ":=", 
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"w3N", "-", 
       RowBox[{"f", " ", 
        RowBox[{"w3N", "/", "2"}]}]}], ")"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.6400636533378716`*^9, 3.640063660497881*^9}, 
   3.73149147988935*^9, {3.731491674918557*^9, 3.7314916830123243`*^9}, {
   3.731492215580256*^9, 3.7314922204587297`*^9}, {3.7314922983734775`*^9, 
   3.7314923169700875`*^9}, 3.7664942196676946`*^9, {3.7665029866567116`*^9, 
   3.766503063117243*^9}, {3.767001703621694*^9, 3.767001711316248*^9}}],

Cell[BoxData[
 RowBox[{"\[ScriptCapitalP]", ":=", 
  RowBox[{"ContinuousMarkovProcess", "[", 
   RowBox[{"1", ",", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "mu1Half"}], "mu1Half", "0", "0", "0", "0", "0", "0"},
       {"0", 
        RowBox[{
         RowBox[{"-", "mu1N"}], "-", "mu2Half"}], "mu1N", "mu2Half", "0", "0",
         "0", "0"},
       {"0", "0", 
        RowBox[{"-", "mu2Full"}], "0", "mu2Full", "0", "0", "0"},
       {"mu3N", "0", "0", 
        RowBox[{
         RowBox[{"-", "mu1Half"}], "-", "mu3N"}], "mu1Half", "0", "0", "0"},
       {"0", "mu3N", "0", "0", 
        RowBox[{
         RowBox[{"-", "mu1N"}], "-", "mu2N", "-", "mu3N"}], "mu1N", "mu2N", 
        "0"},
       {"0", "0", "mu3N", "0", "0", 
        RowBox[{
         RowBox[{"-", "mu2Half"}], "-", "mu3N"}], "0", "mu2Half"},
       {"0", "0", "0", "mu3Half", "0", "0", 
        RowBox[{
         RowBox[{"-", "mu1N"}], "-", "mu3Half"}], "mu1N"},
       {"0", "0", "0", "0", "mu3Half", "0", "0", 
        RowBox[{"-", "mu3Half"}]}
      }], "\[NoBreak]", ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.640063623116828*^9, 3.7314914596032104`*^9, {3.73149148991673*^9, 
   3.731491595518195*^9}, {3.731491633721156*^9, 3.731491646430315*^9}, {
   3.7314916915578203`*^9, 3.7314917487593193`*^9}, 3.731492009119464*^9, {
   3.7465187290057087`*^9, 3.7465187309395967`*^9}, {3.746556279665941*^9, 
   3.7465562805337996`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", "\[ScriptCapitalP]", "]"}]], "Input",
 CellChangeTimes->{{3.640063397410502*^9, 3.6400634043545127`*^9}, {
  3.731491661709672*^9, 3.7314916688503695`*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {
       SparseArray[
       Automatic, {8, 8}, 0, {
        1, {{0, 1, 3, 4, 6, 9, 11, 13, 14}, {{2}, {3}, {4}, {5}, {1}, {5}, {
          2}, {6}, {7}, {3}, {8}, {4}, {8}, {5}}}, Pattern}], Null}, {
      EdgeLabels -> {
        DirectedEdge[5, 7] -> Placed[1, Tooltip], DirectedEdge[3, 5] -> 
         Placed[(1 - $CellContext`f)^(-1), Tooltip], DirectedEdge[8, 5] -> 
         Placed[($CellContext`w3N + 
            Rational[-1, 2] $CellContext`f $CellContext`w3N)^(-1), Tooltip], 
         DirectedEdge[5, 2] -> Placed[$CellContext`w3N^(-1), Tooltip], 
         DirectedEdge[2, 3] -> Placed[$CellContext`w1N^(-1), Tooltip], 
         DirectedEdge[7, 8] -> Placed[$CellContext`w1N^(-1), Tooltip], 
         DirectedEdge[1, 2] -> 
         Placed[($CellContext`w1N + 
            Rational[-1, 2] $CellContext`f $CellContext`w1N)^(-1), Tooltip], 
         DirectedEdge[6, 3] -> Placed[$CellContext`w3N^(-1), Tooltip], 
         DirectedEdge[4, 5] -> 
         Placed[($CellContext`w1N + 
            Rational[-1, 2] $CellContext`f $CellContext`w1N)^(-1), Tooltip], 
         DirectedEdge[2, 4] -> 
         Placed[(1 + Rational[-1, 2] $CellContext`f)^(-1), Tooltip], 
         DirectedEdge[5, 6] -> Placed[$CellContext`w1N^(-1), Tooltip], 
         DirectedEdge[6, 8] -> 
         Placed[(1 + Rational[-1, 2] $CellContext`f)^(-1), Tooltip], 
         DirectedEdge[4, 1] -> Placed[$CellContext`w3N^(-1), Tooltip], 
         DirectedEdge[7, 4] -> 
         Placed[($CellContext`w3N + 
            Rational[-1, 2] $CellContext`f $CellContext`w3N)^(-1), Tooltip]}, 
       EdgeStyle -> {
         Arrowheads[Medium]}, GraphLayout -> "SpringElectricalEmbedding", 
       ImagePadding -> All, 
       Properties -> {
        DirectedEdge[7, 4] -> {
          "TransitionRate" -> ($CellContext`w3N + 
             Rational[-1, 2] $CellContext`f $CellContext`w3N)^(-1)}, 
         DirectedEdge[1, 2] -> {
          "TransitionRate" -> ($CellContext`w1N + 
             Rational[-1, 2] $CellContext`f $CellContext`w1N)^(-1)}, 
         DirectedEdge[6, 3] -> {"TransitionRate" -> $CellContext`w3N^(-1)}, 
         DirectedEdge[4, 5] -> {
          "TransitionRate" -> ($CellContext`w1N + 
             Rational[-1, 2] $CellContext`f $CellContext`w1N)^(-1)}, 
         DirectedEdge[3, 5] -> {
          "TransitionRate" -> (1 - $CellContext`f)^(-1)}, 
         DirectedEdge[6, 8] -> {
          "TransitionRate" -> (1 + Rational[-1, 2] $CellContext`f)^(-1)}, 
         DirectedEdge[5, 7] -> {"TransitionRate" -> 1}, 
         DirectedEdge[4, 1] -> {"TransitionRate" -> $CellContext`w3N^(-1)}, 
         DirectedEdge[7, 8] -> {"TransitionRate" -> $CellContext`w1N^(-1)}, 
         DirectedEdge[2, 3] -> {"TransitionRate" -> $CellContext`w1N^(-1)}, 
         DirectedEdge[2, 4] -> {
          "TransitionRate" -> (1 + Rational[-1, 2] $CellContext`f)^(-1)}, 
         DirectedEdge[8, 5] -> {
          "TransitionRate" -> ($CellContext`w3N + 
             Rational[-1, 2] $CellContext`f $CellContext`w3N)^(-1)}, 
         DirectedEdge[5, 6] -> {"TransitionRate" -> $CellContext`w1N^(-1)}, 
         DirectedEdge[5, 2] -> {"TransitionRate" -> $CellContext`w3N^(-1)}}, 
       VertexLabels -> {
         Placed["Name", Center]}, 
       VertexShapeFunction -> {
        2 -> "Circle", 3 -> "Circle", 4 -> "Circle", 8 -> "Circle", 7 -> 
         "Circle", 6 -> "Circle", 5 -> "Circle", 1 -> "Circle"}, 
       VertexSize -> {0.27}, 
       VertexStyle -> {
        5 -> Hue[0.14, 1, 0.9], 6 -> Hue[0.14, 1, 0.9], 2 -> 
         Hue[0.14, 1, 0.9], 7 -> Hue[0.14, 1, 0.9], 8 -> Hue[0.14, 1, 0.9], 1 -> 
         Hue[0.14, 1, 0.9], 3 -> Hue[0.14, 1, 0.9], 4 -> 
         Hue[0.14, 1, 0.9]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        TagBox[
         TooltipBox[
          ArrowBox[{{0., 0.9347577511630369}, {0.9358961134186351, 
           1.3690828390856102`}}, 0.02853297552455815],
          FractionBox["1", 
           RowBox[{"w1N", "-", 
             FractionBox[
              RowBox[{"f", " ", "w1N"}], "2"]}]]],
         Annotation[#, ($CellContext`w1N + 
           Rational[-1, 2] $CellContext`f $CellContext`w1N)^(-1), 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          ArrowBox[{{0.9358961134186351, 1.3690828390856102`}, {
           1.8947954116918173`, 1.8702589148525801`}}, 0.02853297552455815],
          FractionBox["1", "w1N"]],
         Annotation[#, $CellContext`w1N^(-1), "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          ArrowBox[{{0.9358961134186351, 1.3690828390856102`}, {
           0.9361872842623584, 0.5008960520489159}}, 0.02853297552455815],
          FractionBox["1", 
           RowBox[{"1", "-", 
             FractionBox["f", "2"]}]]],
         Annotation[#, (1 + Rational[-1, 2] $CellContext`f)^(-1), 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          ArrowBox[{{1.8947954116918173`, 1.8702589148525801`}, {
           1.890106277036941, 0.9349725254176061}}, 0.02853297552455815],
          FractionBox["1", 
           RowBox[{"1", "-", "f"}]]],
         Annotation[#, (1 - $CellContext`f)^(-1), "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          ArrowBox[{{0.9361872842623584, 0.5008960520489159}, {0., 
           0.9347577511630369}}, 0.02853297552455815],
          FractionBox["1", "w3N"]],
         Annotation[#, $CellContext`w3N^(-1), "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          ArrowBox[{{0.9361872842623584, 0.5008960520489159}, {
           1.890106277036941, 0.9349725254176061}}, 0.02853297552455815],
          FractionBox["1", 
           RowBox[{"w1N", "-", 
             FractionBox[
              RowBox[{"f", " ", "w1N"}], "2"]}]]],
         Annotation[#, ($CellContext`w1N + 
           Rational[-1, 2] $CellContext`f $CellContext`w1N)^(-1), 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          ArrowBox[{{1.890106277036941, 0.9349725254176061}, {
           0.9358961134186351, 1.3690828390856102`}}, 0.02853297552455815],
          FractionBox["1", "w3N"]],
         Annotation[#, $CellContext`w3N^(-1), "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          ArrowBox[{{1.890106277036941, 0.9349725254176061}, {
           2.7645983600167305`, 1.4122926991880256`}}, 0.02853297552455815],
          FractionBox["1", "w1N"]],
         Annotation[#, $CellContext`w1N^(-1), "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          ArrowBox[{{1.890106277036941, 0.9349725254176061}, {
           1.895585241495798, 0.}}, 0.02853297552455815],
          "1"],
         Annotation[#, 1, "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          ArrowBox[{{2.7645983600167305`, 1.4122926991880256`}, {
           1.8947954116918173`, 1.8702589148525801`}}, 0.02853297552455815],
          FractionBox["1", "w3N"]],
         Annotation[#, $CellContext`w3N^(-1), "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          ArrowBox[{{2.7645983600167305`, 1.4122926991880256`}, {
           2.765374109862709, 0.4583834165141526}}, 0.02853297552455815],
          FractionBox["1", 
           RowBox[{"1", "-", 
             FractionBox["f", "2"]}]]],
         Annotation[#, (1 + Rational[-1, 2] $CellContext`f)^(-1), 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          ArrowBox[{{1.895585241495798, 0.}, {0.9361872842623584, 
           0.5008960520489159}}, 0.02853297552455815],
          FractionBox["1", 
           RowBox[{"w3N", "-", 
             FractionBox[
              RowBox[{"f", " ", "w3N"}], "2"]}]]],
         Annotation[#, ($CellContext`w3N + 
           Rational[-1, 2] $CellContext`f $CellContext`w3N)^(-1), 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          ArrowBox[{{1.895585241495798, 0.}, {2.765374109862709, 
           0.4583834165141526}}, 0.02853297552455815],
          FractionBox["1", "w1N"]],
         Annotation[#, $CellContext`w1N^(-1), "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          ArrowBox[{{2.765374109862709, 0.4583834165141526}, {
           1.890106277036941, 0.9349725254176061}}, 0.02853297552455815],
          FractionBox["1", 
           RowBox[{"w3N", "-", 
             FractionBox[
              RowBox[{"f", " ", "w3N"}], "2"]}]]],
         Annotation[#, ($CellContext`w3N + 
           Rational[-1, 2] $CellContext`f $CellContext`w3N)^(-1), 
          "Tooltip"]& ]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
         {Hue[0.14, 1, 0.9], 
          DiskBox[{0., 0.9347577511630369}, 0.11720522284148563`]}, 
         InsetBox["1", {0., 0.9347577511630369},
          BaseStyle->"Graphics"]}, {
         {Hue[0.14, 1, 0.9], 
          DiskBox[{0.9358961134186351, 1.3690828390856102`}, 
           0.11720522284148563`]}, InsetBox["2", {0.9358961134186351, 1.3690828390856102`},
          BaseStyle->"Graphics"]}, {
         {Hue[0.14, 1, 0.9], 
          DiskBox[{1.8947954116918173`, 1.8702589148525801`}, 
           0.11720522284148563`]}, InsetBox["3", {1.8947954116918173`, 1.8702589148525801`},
          BaseStyle->"Graphics"]}, {
         {Hue[0.14, 1, 0.9], 
          DiskBox[{0.9361872842623584, 0.5008960520489159}, 
           0.11720522284148563`]}, InsetBox["4", {0.9361872842623584, 0.5008960520489159},
          BaseStyle->"Graphics"]}, {
         {Hue[0.14, 1, 0.9], 
          DiskBox[{1.890106277036941, 0.9349725254176061}, 
           0.11720522284148563`]}, InsetBox["5", {1.890106277036941, 0.9349725254176061},
          BaseStyle->"Graphics"]}, {
         {Hue[0.14, 1, 0.9], 
          DiskBox[{2.7645983600167305`, 1.4122926991880256`}, 
           0.11720522284148563`]}, InsetBox["6", {2.7645983600167305`, 1.4122926991880256`},
          BaseStyle->"Graphics"]}, {
         {Hue[0.14, 1, 0.9], 
          DiskBox[{1.895585241495798, 0.}, 0.11720522284148563`]}, 
         InsetBox["7", {1.895585241495798, 0.},
          BaseStyle->"Graphics"]}, {
         {Hue[0.14, 1, 0.9], 
          DiskBox[{2.765374109862709, 0.4583834165141526}, 
           0.11720522284148563`]}, InsetBox["8", {2.765374109862709, 0.4583834165141526},
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]]]], "Output",
 CellChangeTimes->{3.6400634063595157`*^9, 3.6404048394982977`*^9, 
  3.640659831414045*^9, 3.6406712539483004`*^9, 3.7314917587749143`*^9, 
  3.7314920118538637`*^9, 3.731492231335178*^9, 3.7314923244393053`*^9, 
  3.7314925943813286`*^9, 3.731493350919284*^9, 3.7464346694669647`*^9, 
  3.7464543536383314`*^9, 3.746511974698427*^9, 3.746556283233006*^9, 
  3.746606376917621*^9, 3.766494235201503*^9, 3.7665051600739675`*^9, 
  3.7665071301194315`*^9, 3.7670017202709846`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"w1N", ",", "w2N", ",", "w3N", ",", "f"}], "]"}]], "Input",
 CellChangeTimes->{{3.746435956545229*^9, 3.7464359571933756`*^9}, {
   3.746436205670741*^9, 3.746436268685935*^9}, {3.7464391317896376`*^9, 
   3.746439133889743*^9}, {3.746445882640743*^9, 3.746445892436514*^9}, {
   3.7464459367155056`*^9, 3.7464459896795273`*^9}, {3.7464462081793876`*^9, 
   3.746446213582307*^9}, {3.746447327146531*^9, 3.7464473435733414`*^9}, {
   3.7464480311739016`*^9, 3.7464480452523794`*^9}, {3.7464481382175837`*^9, 
   3.7464481387146826`*^9}, {3.746450374845977*^9, 3.74645037776429*^9}, {
   3.74645041166269*^9, 3.7464504335418158`*^9}, {3.746450518967388*^9, 
   3.7464505196355076`*^9}, {3.74645162698965*^9, 3.746451629790045*^9}, {
   3.746451843686241*^9, 3.7464518448925266`*^9}, {3.746452832626703*^9, 
   3.746452832803602*^9}, 3.746453003139797*^9, {3.746453098571001*^9, 
   3.7464531011944904`*^9}, {3.746453238259976*^9, 3.746453239617197*^9}, 
   3.7464534844386187`*^9, 3.746453619993784*^9, 3.7464539283928075`*^9, 
   3.7464543268780804`*^9, {3.7465119978841915`*^9, 3.7465120155913177`*^9}, {
   3.746512303824667*^9, 3.7465123047718105`*^9}, {3.746523741146947*^9, 
   3.746523742073415*^9}, {3.74652394927303*^9, 3.7465239509770517`*^9}, {
   3.74652408288085*^9, 3.746524084009201*^9}, {3.746525866678286*^9, 
   3.7465258677486734`*^9}, {3.74652616233352*^9, 3.74652616268432*^9}, {
   3.7465463723630624`*^9, 3.7465463771138515`*^9}, {3.7465562897993565`*^9, 
   3.7465562910271845`*^9}, {3.7665051645258937`*^9, 3.7665051649945765`*^9}}],

Cell[BoxData[
 RowBox[{"TH", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "4"}], "6"], 
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"\[ScriptCapitalP]", "[", "\[Infinity]", "]"}], ",", "i"}], 
       "]"}]}], ")"}], "mu3N"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "7"}], "8"], 
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"\[ScriptCapitalP]", "[", "\[Infinity]", "]"}], ",", "i"}], 
       "]"}]}], ")"}], "mu3Half"}]}]}]], "Input",
 CellChangeTimes->{{3.640404919993411*^9, 3.6404049284084225`*^9}, 
   3.640660811715417*^9, {3.7314917752721295`*^9, 3.7314918065085306`*^9}, 
   3.746435651247647*^9, 3.7465188167093487`*^9, 3.7465261649420247`*^9, 
   3.7670017294070883`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"THSimple", "[", 
   RowBox[{"f_", ",", "w1N_", ",", "w3N_"}], "]"}], ":=", 
  RowBox[{"-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"f", "-", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "w3N"}], ")"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "f"}], ")"}], "2"], " ", 
          SuperscriptBox["w3N", "3"]}], "+", 
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "f"}], ")"}], " ", 
          SuperscriptBox["w1N", "4"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "w3N"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "f"}], ")"}], " ", "w1N", " ", 
          SuperscriptBox["w3N", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"12", "+", 
            SuperscriptBox["f", "2"], "+", 
            RowBox[{"8", " ", "w3N"}], "-", 
            RowBox[{"2", " ", "f", " ", 
             RowBox[{"(", 
              RowBox[{"3", "+", "w3N"}], ")"}]}]}], ")"}]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["w1N", "3"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", "f", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"3", " ", "w3N"}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["f", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"3", " ", "w3N"}]}], ")"}]}], "+", 
            RowBox[{"4", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"4", " ", "w3N"}], "+", 
               SuperscriptBox["w3N", "2"]}], ")"}]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["w1N", "2"], " ", "w3N", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["f", "3"], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "w3N"}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["f", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"4", "+", 
               RowBox[{"3", " ", "w3N"}]}], ")"}]}], "-", 
            RowBox[{"8", " ", 
             RowBox[{"(", 
              RowBox[{"3", "+", 
               RowBox[{"4", " ", "w3N"}], "+", 
               SuperscriptBox["w3N", "2"]}], ")"}]}], "+", 
            RowBox[{"4", " ", "f", " ", 
             RowBox[{"(", 
              RowBox[{"6", "+", 
               RowBox[{"5", " ", "w3N"}], "+", 
               SuperscriptBox["w3N", "2"]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
      ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "f"}], ")"}], "3"], " ", 
        SuperscriptBox["w3N", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "f", "-", "w3N", "-", 
          SuperscriptBox["w3N", "2"]}], ")"}]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "f"}], ")"}], "2"], " ", 
        SuperscriptBox["w1N", "5"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "w3N"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"f", "-", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "w3N"}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "f"}], ")"}], " ", 
        SuperscriptBox["w1N", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["f", "3"], " ", "w3N"}], "-", 
          RowBox[{
           SuperscriptBox["f", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"7", " ", "w3N"}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["w3N", "2"]}]}], ")"}]}], "+", 
          RowBox[{"4", " ", "f", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"5", " ", "w3N"}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["w3N", "2"]}]}], ")"}]}], "-", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"5", " ", "w3N"}], "+", 
             RowBox[{"5", " ", 
              SuperscriptBox["w3N", "2"]}], "+", 
             SuperscriptBox["w3N", "3"]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "f"}], ")"}], "2"], " ", "w1N", " ", 
        SuperscriptBox["w3N", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["f", "3"], "-", 
          RowBox[{
           SuperscriptBox["f", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"7", "+", "w3N", "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["w3N", "2"]}]}], ")"}]}], "+", 
          RowBox[{"2", " ", "f", " ", 
           RowBox[{"(", 
            RowBox[{"9", "+", 
             RowBox[{"7", " ", "w3N"}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["w3N", "2"]}], "+", 
             SuperscriptBox["w3N", "3"]}], ")"}]}], "-", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"5", " ", "w3N"}], "+", 
             RowBox[{"5", " ", 
              SuperscriptBox["w3N", "2"]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["w3N", "3"]}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "f"}], ")"}], " ", 
        SuperscriptBox["w1N", "2"], " ", "w3N", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["f", "4"], " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             SuperscriptBox["w3N", "2"]}], ")"}]}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["f", "3"], " ", 
           RowBox[{"(", 
            RowBox[{"9", "+", 
             RowBox[{"3", " ", "w3N"}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["w3N", "2"]}], "+", 
             SuperscriptBox["w3N", "3"]}], ")"}]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["f", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"16", "+", 
             RowBox[{"10", " ", "w3N"}], "+", 
             RowBox[{"9", " ", 
              SuperscriptBox["w3N", "2"]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["w3N", "3"]}]}], ")"}]}], "+", 
          RowBox[{"16", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"7", " ", "w3N"}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["w3N", "2"]}], "+", 
             RowBox[{"5", " ", 
              SuperscriptBox["w3N", "3"]}], "+", 
             SuperscriptBox["w3N", "4"]}], ")"}]}], "-", 
          RowBox[{"8", " ", "f", " ", 
           RowBox[{"(", 
            RowBox[{"12", "+", 
             RowBox[{"16", " ", "w3N"}], "+", 
             RowBox[{"12", " ", 
              SuperscriptBox["w3N", "2"]}], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["w3N", "3"]}], "+", 
             SuperscriptBox["w3N", "4"]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["w1N", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"12", " ", 
           SuperscriptBox["f", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "w3N"}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"2", " ", "w3N"}]}], ")"}]}], "+", 
          RowBox[{"16", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "w3N"}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"3", " ", "w3N"}], "+", 
             SuperscriptBox["w3N", "2"]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["f", "4"], " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{"3", " ", "w3N"}], "+", 
             SuperscriptBox["w3N", "2"]}], ")"}]}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["f", "3"], " ", 
           RowBox[{"(", 
            RowBox[{"7", "+", 
             RowBox[{"14", " ", "w3N"}], "+", 
             RowBox[{"9", " ", 
              SuperscriptBox["w3N", "2"]}], "+", 
             SuperscriptBox["w3N", "3"]}], ")"}]}], "-", 
          RowBox[{"8", " ", "f", " ", 
           RowBox[{"(", 
            RowBox[{"5", "+", 
             RowBox[{"18", " ", "w3N"}], "+", 
             RowBox[{"21", " ", 
              SuperscriptBox["w3N", "2"]}], "+", 
             RowBox[{"9", " ", 
              SuperscriptBox["w3N", "3"]}], "+", 
             SuperscriptBox["w3N", "4"]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.766495778571046*^9, 3.7664957926844363`*^9}, {
   3.7664958259618616`*^9, 3.766495840868164*^9}, {3.766495970508222*^9, 
   3.766495972445711*^9}, {3.766500168515876*^9, 3.766500170593862*^9}, 
   3.766505187666211*^9, 3.7670017485418024`*^9}],

Cell[BoxData[{
 RowBox[{"TH1", ":=", 
  RowBox[{"THSimple", "[", 
   RowBox[{"f", ",", 
    RowBox[{"1", "+", "\[Epsilon]"}], ",", "1"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"TH2", ":=", 
  RowBox[{"THSimple", "[", 
   RowBox[{"f", ",", "1", ",", 
    RowBox[{"1", "+", "\[Epsilon]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7665006352433867`*^9, 3.766500690822682*^9}, {
  3.7665011518219357`*^9, 3.7665011641336937`*^9}, {3.7665015464629407`*^9, 
  3.7665015480252366`*^9}, {3.7665015863570805`*^9, 3.7665015865913424`*^9}, {
  3.7665053334529057`*^9, 3.7665053544999495`*^9}, {3.76650994373263*^9, 
  3.766509945466878*^9}, {3.7665099984177756`*^9, 3.7665100049617057`*^9}, {
  3.7665101779774103`*^9, 3.7665101905892124`*^9}, {3.766510248122369*^9, 
  3.766510249341035*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"TH1", "-", "TH2"}], "]"}]], "Input",
 CellChangeTimes->{{3.7665006927599397`*^9, 3.766500704602542*^9}, {
  3.766501272060466*^9, 3.7665012786541414`*^9}, {3.766502295289787*^9, 
  3.766502301179988*^9}, {3.7665101826839285`*^9, 3.7665101846678004`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "f"}], ")"}], " ", "f", " ", "\[Epsilon]", 
      " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Epsilon]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"f", "-", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Epsilon]"}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["f", "6"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Epsilon]"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", 
           RowBox[{"2", " ", "\[Epsilon]"}]}], ")"}]}], "-", 
        RowBox[{"64", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Epsilon]"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"3", "+", 
            RowBox[{"2", " ", "\[Epsilon]"}]}], ")"}], "3"]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["f", "5"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Epsilon]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"5", "+", 
           RowBox[{"4", " ", "\[Epsilon]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"5", "+", 
           RowBox[{"\[Epsilon]", " ", 
            RowBox[{"(", 
             RowBox[{"5", "+", "\[Epsilon]"}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["f", "4"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Epsilon]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"82", "+", 
           RowBox[{"\[Epsilon]", " ", 
            RowBox[{"(", 
             RowBox[{"164", "+", 
              RowBox[{"\[Epsilon]", " ", 
               RowBox[{"(", 
                RowBox[{"113", "+", 
                 RowBox[{"2", " ", "\[Epsilon]", " ", 
                  RowBox[{"(", 
                   RowBox[{"15", "+", "\[Epsilon]"}], ")"}]}]}], ")"}]}]}], 
             ")"}]}]}], ")"}]}], "-", 
        RowBox[{"32", " ", "f", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "59"}], "+", 
           RowBox[{"2", " ", "\[Epsilon]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "43"}], "+", 
              RowBox[{"\[Epsilon]", " ", 
               RowBox[{"(", 
                RowBox[{"4", "+", 
                 RowBox[{"\[Epsilon]", " ", 
                  RowBox[{"(", 
                   RowBox[{"37", "+", 
                    RowBox[{"22", " ", "\[Epsilon]"}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}]}]}], 
                ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{"16", " ", 
         SuperscriptBox["f", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"52", "+", 
           RowBox[{"\[Epsilon]", " ", 
            RowBox[{"(", 
             RowBox[{"259", "+", 
              RowBox[{"2", " ", "\[Epsilon]", " ", 
               RowBox[{"(", 
                RowBox[{"213", "+", 
                 RowBox[{"\[Epsilon]", " ", 
                  RowBox[{"(", 
                   RowBox[{"161", "+", 
                    RowBox[{"58", " ", "\[Epsilon]"}], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}]}]}], 
                ")"}]}]}], ")"}]}]}], ")"}]}], "-", 
        RowBox[{"8", " ", 
         SuperscriptBox["f", "3"], " ", 
         RowBox[{"(", 
          RowBox[{"122", "+", 
           RowBox[{"\[Epsilon]", " ", 
            RowBox[{"(", 
             RowBox[{"410", "+", 
              RowBox[{"\[Epsilon]", " ", 
               RowBox[{"(", 
                RowBox[{"525", "+", 
                 RowBox[{"2", " ", "\[Epsilon]", " ", 
                  RowBox[{"(", 
                   RowBox[{"161", "+", 
                    RowBox[{"\[Epsilon]", " ", 
                    RowBox[{"(", 
                    RowBox[{"47", "+", 
                    RowBox[{"5", " ", "\[Epsilon]"}]}], ")"}]}]}], ")"}]}]}], 
                ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["f", "5"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Epsilon]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"5", "+", 
           RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}], "-", 
        RowBox[{"32", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Epsilon]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"39", "+", 
           RowBox[{"4", " ", "\[Epsilon]", " ", 
            RowBox[{"(", 
             RowBox[{"19", "+", 
              RowBox[{"\[Epsilon]", " ", 
               RowBox[{"(", 
                RowBox[{"15", "+", 
                 RowBox[{"\[Epsilon]", " ", 
                  RowBox[{"(", 
                   RowBox[{"6", "+", "\[Epsilon]"}], ")"}]}]}], ")"}]}]}], 
             ")"}]}]}], ")"}]}], "-", 
        RowBox[{"4", " ", 
         SuperscriptBox["f", "4"], " ", 
         RowBox[{"(", 
          RowBox[{"22", "+", 
           RowBox[{"\[Epsilon]", " ", 
            RowBox[{"(", 
             RowBox[{"40", "+", 
              RowBox[{"\[Epsilon]", " ", 
               RowBox[{"(", 
                RowBox[{"25", "+", 
                 RowBox[{"\[Epsilon]", " ", 
                  RowBox[{"(", 
                   RowBox[{"7", "+", "\[Epsilon]"}], ")"}]}]}], ")"}]}]}], 
             ")"}]}]}], ")"}]}], "+", 
        RowBox[{"16", " ", "f", " ", 
         RowBox[{"(", 
          RowBox[{"227", "+", 
           RowBox[{"\[Epsilon]", " ", 
            RowBox[{"(", 
             RowBox[{"525", "+", 
              RowBox[{"\[Epsilon]", " ", 
               RowBox[{"(", 
                RowBox[{"513", "+", 
                 RowBox[{"2", " ", "\[Epsilon]", " ", 
                  RowBox[{"(", 
                   RowBox[{"137", "+", 
                    RowBox[{"5", " ", "\[Epsilon]", " ", 
                    RowBox[{"(", 
                    RowBox[{"8", "+", "\[Epsilon]"}], ")"}]}]}], ")"}]}]}], 
                ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["f", "3"], " ", 
         RowBox[{"(", 
          RowBox[{"153", "+", 
           RowBox[{"\[Epsilon]", " ", 
            RowBox[{"(", 
             RowBox[{"306", "+", 
              RowBox[{"\[Epsilon]", " ", 
               RowBox[{"(", 
                RowBox[{"241", "+", 
                 RowBox[{"\[Epsilon]", " ", 
                  RowBox[{"(", 
                   RowBox[{"99", "+", 
                    RowBox[{"2", " ", "\[Epsilon]", " ", 
                    RowBox[{"(", 
                    RowBox[{"11", "+", "\[Epsilon]"}], ")"}]}]}], ")"}]}]}], 
                ")"}]}]}], ")"}]}]}], ")"}]}], "-", 
        RowBox[{"8", " ", 
         SuperscriptBox["f", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"264", "+", 
           RowBox[{"\[Epsilon]", " ", 
            RowBox[{"(", 
             RowBox[{"571", "+", 
              RowBox[{"2", " ", "\[Epsilon]", " ", 
               RowBox[{"(", 
                RowBox[{"257", "+", 
                 RowBox[{"2", " ", "\[Epsilon]", " ", 
                  RowBox[{"(", 
                   RowBox[{"63", "+", 
                    RowBox[{"\[Epsilon]", " ", 
                    RowBox[{"(", 
                    RowBox[{"17", "+", 
                    RowBox[{"2", " ", "\[Epsilon]"}]}], ")"}]}]}], ")"}]}]}], 
                ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["f", "5"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Epsilon]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"5", "+", 
           RowBox[{"\[Epsilon]", " ", 
            RowBox[{"(", 
             RowBox[{"4", "+", "\[Epsilon]"}], ")"}]}]}], ")"}]}], "-", 
        RowBox[{"32", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Epsilon]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"39", "+", 
           RowBox[{"4", " ", "\[Epsilon]", " ", 
            RowBox[{"(", 
             RowBox[{"19", "+", 
              RowBox[{"\[Epsilon]", " ", 
               RowBox[{"(", 
                RowBox[{"15", "+", 
                 RowBox[{"\[Epsilon]", " ", 
                  RowBox[{"(", 
                   RowBox[{"6", "+", "\[Epsilon]"}], ")"}]}]}], ")"}]}]}], 
             ")"}]}]}], ")"}]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["f", "4"], " ", 
         RowBox[{"(", 
          RowBox[{"44", "+", 
           RowBox[{"\[Epsilon]", " ", 
            RowBox[{"(", 
             RowBox[{"82", "+", 
              RowBox[{"\[Epsilon]", " ", 
               RowBox[{"(", 
                RowBox[{"57", "+", 
                 RowBox[{"\[Epsilon]", " ", 
                  RowBox[{"(", 
                   RowBox[{"20", "+", 
                    RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}]}], ")"}]}]}], 
             ")"}]}]}], ")"}]}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["f", "3"], " ", 
         RowBox[{"(", 
          RowBox[{"153", "+", 
           RowBox[{"\[Epsilon]", " ", 
            RowBox[{"(", 
             RowBox[{"303", "+", 
              RowBox[{"\[Epsilon]", " ", 
               RowBox[{"(", 
                RowBox[{"243", "+", 
                 RowBox[{"2", " ", "\[Epsilon]", " ", 
                  RowBox[{"(", 
                   RowBox[{"53", "+", 
                    RowBox[{"\[Epsilon]", " ", 
                    RowBox[{"(", 
                    RowBox[{"12", "+", "\[Epsilon]"}], ")"}]}]}], ")"}]}]}], 
                ")"}]}]}], ")"}]}]}], ")"}]}], "-", 
        RowBox[{"8", " ", 
         SuperscriptBox["f", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"264", "+", 
           RowBox[{"\[Epsilon]", " ", 
            RowBox[{"(", 
             RowBox[{"561", "+", 
              RowBox[{"4", " ", "\[Epsilon]", " ", 
               RowBox[{"(", 
                RowBox[{"125", "+", 
                 RowBox[{"\[Epsilon]", " ", 
                  RowBox[{"(", 
                   RowBox[{"62", "+", 
                    RowBox[{"\[Epsilon]", " ", 
                    RowBox[{"(", 
                    RowBox[{"17", "+", 
                    RowBox[{"2", " ", "\[Epsilon]"}]}], ")"}]}]}], ")"}]}]}], 
                ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{"16", " ", "f", " ", 
         RowBox[{"(", 
          RowBox[{"227", "+", 
           RowBox[{"\[Epsilon]", " ", 
            RowBox[{"(", 
             RowBox[{"519", "+", 
              RowBox[{"\[Epsilon]", " ", 
               RowBox[{"(", 
                RowBox[{"502", "+", 
                 RowBox[{"\[Epsilon]", " ", 
                  RowBox[{"(", 
                   RowBox[{"268", "+", 
                    RowBox[{"\[Epsilon]", " ", 
                    RowBox[{"(", 
                    RowBox[{"79", "+", 
                    RowBox[{"10", " ", "\[Epsilon]"}]}], ")"}]}]}], ")"}]}]}],
                 ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}], ")"}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{
  3.766509949169674*^9, 3.7665100068990765`*^9, 3.766510116586316*^9, {
   3.766510185558234*^9, 3.7665101941912503`*^9}, 3.7665102641394677`*^9, 
   3.7670017816841354`*^9, 3.7734346128622675`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Numerator", "[", "%35", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "2"}], "+", "f"}], ")"}], " ", "f", " ", "\[Epsilon]", " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "\[Epsilon]"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"f", "-", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", "\[Epsilon]"}], ")"}]}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["f", "6"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Epsilon]"}], ")"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{"3", "+", 
       RowBox[{"2", " ", "\[Epsilon]"}]}], ")"}]}], "-", 
    RowBox[{"64", " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", "\[Epsilon]"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"3", "+", 
        RowBox[{"2", " ", "\[Epsilon]"}]}], ")"}], "3"]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["f", "5"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Epsilon]"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"5", "+", 
       RowBox[{"4", " ", "\[Epsilon]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"5", "+", 
       RowBox[{"\[Epsilon]", " ", 
        RowBox[{"(", 
         RowBox[{"5", "+", "\[Epsilon]"}], ")"}]}]}], ")"}]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["f", "4"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Epsilon]"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"82", "+", 
       RowBox[{"\[Epsilon]", " ", 
        RowBox[{"(", 
         RowBox[{"164", "+", 
          RowBox[{"\[Epsilon]", " ", 
           RowBox[{"(", 
            RowBox[{"113", "+", 
             RowBox[{"2", " ", "\[Epsilon]", " ", 
              RowBox[{"(", 
               RowBox[{"15", "+", "\[Epsilon]"}], ")"}]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}], "-", 
    RowBox[{"32", " ", "f", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "59"}], "+", 
       RowBox[{"2", " ", "\[Epsilon]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "43"}], "+", 
          RowBox[{"\[Epsilon]", " ", 
           RowBox[{"(", 
            RowBox[{"4", "+", 
             RowBox[{"\[Epsilon]", " ", 
              RowBox[{"(", 
               RowBox[{"37", "+", 
                RowBox[{"22", " ", "\[Epsilon]"}], "+", 
                RowBox[{"4", " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}], "+", 
    RowBox[{"16", " ", 
     SuperscriptBox["f", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"52", "+", 
       RowBox[{"\[Epsilon]", " ", 
        RowBox[{"(", 
         RowBox[{"259", "+", 
          RowBox[{"2", " ", "\[Epsilon]", " ", 
           RowBox[{"(", 
            RowBox[{"213", "+", 
             RowBox[{"\[Epsilon]", " ", 
              RowBox[{"(", 
               RowBox[{"161", "+", 
                RowBox[{"58", " ", "\[Epsilon]"}], "+", 
                RowBox[{"8", " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}], "-", 
    RowBox[{"8", " ", 
     SuperscriptBox["f", "3"], " ", 
     RowBox[{"(", 
      RowBox[{"122", "+", 
       RowBox[{"\[Epsilon]", " ", 
        RowBox[{"(", 
         RowBox[{"410", "+", 
          RowBox[{"\[Epsilon]", " ", 
           RowBox[{"(", 
            RowBox[{"525", "+", 
             RowBox[{"2", " ", "\[Epsilon]", " ", 
              RowBox[{"(", 
               RowBox[{"161", "+", 
                RowBox[{"\[Epsilon]", " ", 
                 RowBox[{"(", 
                  RowBox[{"47", "+", 
                   RowBox[{"5", " ", "\[Epsilon]"}]}], ")"}]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.77343461606441*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", "%36", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"55296", " ", "f", " ", "\[Epsilon]"}], "-", 
  RowBox[{"71680", " ", 
   SuperscriptBox["f", "2"], " ", "\[Epsilon]"}], "+", 
  RowBox[{"16256", " ", 
   SuperscriptBox["f", "3"], " ", "\[Epsilon]"}], "+", 
  RowBox[{"21824", " ", 
   SuperscriptBox["f", "4"], " ", "\[Epsilon]"}], "-", 
  RowBox[{"18624", " ", 
   SuperscriptBox["f", "5"], " ", "\[Epsilon]"}], "+", 
  RowBox[{"6688", " ", 
   SuperscriptBox["f", "6"], " ", "\[Epsilon]"}], "-", 
  RowBox[{"1304", " ", 
   SuperscriptBox["f", "7"], " ", "\[Epsilon]"}], "+", 
  RowBox[{"136", " ", 
   SuperscriptBox["f", "8"], " ", "\[Epsilon]"}], "-", 
  RowBox[{"6", " ", 
   SuperscriptBox["f", "9"], " ", "\[Epsilon]"}], "+", 
  RowBox[{"221184", " ", "f", " ", 
   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
  RowBox[{"248320", " ", 
   SuperscriptBox["f", "2"], " ", 
   SuperscriptBox["\[Epsilon]", "2"]}], "+", 
  RowBox[{"1152", " ", 
   SuperscriptBox["f", "3"], " ", 
   SuperscriptBox["\[Epsilon]", "2"]}], "+", 
  RowBox[{"129664", " ", 
   SuperscriptBox["f", "4"], " ", 
   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
  RowBox[{"88544", " ", 
   SuperscriptBox["f", "5"], " ", 
   SuperscriptBox["\[Epsilon]", "2"]}], "+", 
  RowBox[{"29008", " ", 
   SuperscriptBox["f", "6"], " ", 
   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
  RowBox[{"5304", " ", 
   SuperscriptBox["f", "7"], " ", 
   SuperscriptBox["\[Epsilon]", "2"]}], "+", 
  RowBox[{"524", " ", 
   SuperscriptBox["f", "8"], " ", 
   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
  RowBox[{"22", " ", 
   SuperscriptBox["f", "9"], " ", 
   SuperscriptBox["\[Epsilon]", "2"]}], "+", 
  RowBox[{"364032", " ", "f", " ", 
   SuperscriptBox["\[Epsilon]", "3"]}], "-", 
  RowBox[{"325888", " ", 
   SuperscriptBox["f", "2"], " ", 
   SuperscriptBox["\[Epsilon]", "3"]}], "-", 
  RowBox[{"133248", " ", 
   SuperscriptBox["f", "3"], " ", 
   SuperscriptBox["\[Epsilon]", "3"]}], "+", 
  RowBox[{"300160", " ", 
   SuperscriptBox["f", "4"], " ", 
   SuperscriptBox["\[Epsilon]", "3"]}], "-", 
  RowBox[{"172672", " ", 
   SuperscriptBox["f", "5"], " ", 
   SuperscriptBox["\[Epsilon]", "3"]}], "+", 
  RowBox[{"51312", " ", 
   SuperscriptBox["f", "6"], " ", 
   SuperscriptBox["\[Epsilon]", "3"]}], "-", 
  RowBox[{"8632", " ", 
   SuperscriptBox["f", "7"], " ", 
   SuperscriptBox["\[Epsilon]", "3"]}], "+", 
  RowBox[{"784", " ", 
   SuperscriptBox["f", "8"], " ", 
   SuperscriptBox["\[Epsilon]", "3"]}], "-", 
  RowBox[{"30", " ", 
   SuperscriptBox["f", "9"], " ", 
   SuperscriptBox["\[Epsilon]", "3"]}], "+", 
  RowBox[{"315904", " ", "f", " ", 
   SuperscriptBox["\[Epsilon]", "4"]}], "-", 
  RowBox[{"181504", " ", 
   SuperscriptBox["f", "2"], " ", 
   SuperscriptBox["\[Epsilon]", "4"]}], "-", 
  RowBox[{"277888", " ", 
   SuperscriptBox["f", "3"], " ", 
   SuperscriptBox["\[Epsilon]", "4"]}], "+", 
  RowBox[{"360960", " ", 
   SuperscriptBox["f", "4"], " ", 
   SuperscriptBox["\[Epsilon]", "4"]}], "-", 
  RowBox[{"178784", " ", 
   SuperscriptBox["f", "5"], " ", 
   SuperscriptBox["\[Epsilon]", "4"]}], "+", 
  RowBox[{"47488", " ", 
   SuperscriptBox["f", "6"], " ", 
   SuperscriptBox["\[Epsilon]", "4"]}], "-", 
  RowBox[{"7120", " ", 
   SuperscriptBox["f", "7"], " ", 
   SuperscriptBox["\[Epsilon]", "4"]}], "+", 
  RowBox[{"564", " ", 
   SuperscriptBox["f", "8"], " ", 
   SuperscriptBox["\[Epsilon]", "4"]}], "-", 
  RowBox[{"18", " ", 
   SuperscriptBox["f", "9"], " ", 
   SuperscriptBox["\[Epsilon]", "4"]}], "+", 
  RowBox[{"152576", " ", "f", " ", 
   SuperscriptBox["\[Epsilon]", "5"]}], "-", 
  RowBox[{"10240", " ", 
   SuperscriptBox["f", "2"], " ", 
   SuperscriptBox["\[Epsilon]", "5"]}], "-", 
  RowBox[{"256000", " ", 
   SuperscriptBox["f", "3"], " ", 
   SuperscriptBox["\[Epsilon]", "5"]}], "+", 
  RowBox[{"246976", " ", 
   SuperscriptBox["f", "4"], " ", 
   SuperscriptBox["\[Epsilon]", "5"]}], "-", 
  RowBox[{"105696", " ", 
   SuperscriptBox["f", "5"], " ", 
   SuperscriptBox["\[Epsilon]", "5"]}], "+", 
  RowBox[{"24416", " ", 
   SuperscriptBox["f", "6"], " ", 
   SuperscriptBox["\[Epsilon]", "5"]}], "-", 
  RowBox[{"3088", " ", 
   SuperscriptBox["f", "7"], " ", 
   SuperscriptBox["\[Epsilon]", "5"]}], "+", 
  RowBox[{"192", " ", 
   SuperscriptBox["f", "8"], " ", 
   SuperscriptBox["\[Epsilon]", "5"]}], "-", 
  RowBox[{"4", " ", 
   SuperscriptBox["f", "9"], " ", 
   SuperscriptBox["\[Epsilon]", "5"]}], "+", 
  RowBox[{"38912", " ", "f", " ", 
   SuperscriptBox["\[Epsilon]", "6"]}], "+", 
  RowBox[{"35328", " ", 
   SuperscriptBox["f", "2"], " ", 
   SuperscriptBox["\[Epsilon]", "6"]}], "-", 
  RowBox[{"123904", " ", 
   SuperscriptBox["f", "3"], " ", 
   SuperscriptBox["\[Epsilon]", "6"]}], "+", 
  RowBox[{"96640", " ", 
   SuperscriptBox["f", "4"], " ", 
   SuperscriptBox["\[Epsilon]", "6"]}], "-", 
  RowBox[{"35296", " ", 
   SuperscriptBox["f", "5"], " ", 
   SuperscriptBox["\[Epsilon]", "6"]}], "+", 
  RowBox[{"6752", " ", 
   SuperscriptBox["f", "6"], " ", 
   SuperscriptBox["\[Epsilon]", "6"]}], "-", 
  RowBox[{"648", " ", 
   SuperscriptBox["f", "7"], " ", 
   SuperscriptBox["\[Epsilon]", "6"]}], "+", 
  RowBox[{"24", " ", 
   SuperscriptBox["f", "8"], " ", 
   SuperscriptBox["\[Epsilon]", "6"]}], "+", 
  RowBox[{"4096", " ", "f", " ", 
   SuperscriptBox["\[Epsilon]", "7"]}], "+", 
  RowBox[{"15360", " ", 
   SuperscriptBox["f", "2"], " ", 
   SuperscriptBox["\[Epsilon]", "7"]}], "-", 
  RowBox[{"30720", " ", 
   SuperscriptBox["f", "3"], " ", 
   SuperscriptBox["\[Epsilon]", "7"]}], "+", 
  RowBox[{"19968", " ", 
   SuperscriptBox["f", "4"], " ", 
   SuperscriptBox["\[Epsilon]", "7"]}], "-", 
  RowBox[{"6016", " ", 
   SuperscriptBox["f", "5"], " ", 
   SuperscriptBox["\[Epsilon]", "7"]}], "+", 
  RowBox[{"864", " ", 
   SuperscriptBox["f", "6"], " ", 
   SuperscriptBox["\[Epsilon]", "7"]}], "-", 
  RowBox[{"48", " ", 
   SuperscriptBox["f", "7"], " ", 
   SuperscriptBox["\[Epsilon]", "7"]}], "+", 
  RowBox[{"2048", " ", 
   SuperscriptBox["f", "2"], " ", 
   SuperscriptBox["\[Epsilon]", "8"]}], "-", 
  RowBox[{"3072", " ", 
   SuperscriptBox["f", "3"], " ", 
   SuperscriptBox["\[Epsilon]", "8"]}], "+", 
  RowBox[{"1664", " ", 
   SuperscriptBox["f", "4"], " ", 
   SuperscriptBox["\[Epsilon]", "8"]}], "-", 
  RowBox[{"384", " ", 
   SuperscriptBox["f", "5"], " ", 
   SuperscriptBox["\[Epsilon]", "8"]}], "+", 
  RowBox[{"32", " ", 
   SuperscriptBox["f", "6"], " ", 
   SuperscriptBox["\[Epsilon]", "8"]}]}]], "Output",
 CellChangeTimes->{3.7734346203009806`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{"%37", ",", "f"}], "]"}]], "Input",
 CellChangeTimes->{{3.773434636361766*^9, 3.773434636446717*^9}},
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["f", "9"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "6"}], " ", "\[Epsilon]"}], "-", 
     RowBox[{"22", " ", 
      SuperscriptBox["\[Epsilon]", "2"]}], "-", 
     RowBox[{"30", " ", 
      SuperscriptBox["\[Epsilon]", "3"]}], "-", 
     RowBox[{"18", " ", 
      SuperscriptBox["\[Epsilon]", "4"]}], "-", 
     RowBox[{"4", " ", 
      SuperscriptBox["\[Epsilon]", "5"]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["f", "8"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"136", " ", "\[Epsilon]"}], "+", 
     RowBox[{"524", " ", 
      SuperscriptBox["\[Epsilon]", "2"]}], "+", 
     RowBox[{"784", " ", 
      SuperscriptBox["\[Epsilon]", "3"]}], "+", 
     RowBox[{"564", " ", 
      SuperscriptBox["\[Epsilon]", "4"]}], "+", 
     RowBox[{"192", " ", 
      SuperscriptBox["\[Epsilon]", "5"]}], "+", 
     RowBox[{"24", " ", 
      SuperscriptBox["\[Epsilon]", "6"]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["f", "7"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1304"}], " ", "\[Epsilon]"}], "-", 
     RowBox[{"5304", " ", 
      SuperscriptBox["\[Epsilon]", "2"]}], "-", 
     RowBox[{"8632", " ", 
      SuperscriptBox["\[Epsilon]", "3"]}], "-", 
     RowBox[{"7120", " ", 
      SuperscriptBox["\[Epsilon]", "4"]}], "-", 
     RowBox[{"3088", " ", 
      SuperscriptBox["\[Epsilon]", "5"]}], "-", 
     RowBox[{"648", " ", 
      SuperscriptBox["\[Epsilon]", "6"]}], "-", 
     RowBox[{"48", " ", 
      SuperscriptBox["\[Epsilon]", "7"]}]}], ")"}]}], "+", 
  RowBox[{"f", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"55296", " ", "\[Epsilon]"}], "+", 
     RowBox[{"221184", " ", 
      SuperscriptBox["\[Epsilon]", "2"]}], "+", 
     RowBox[{"364032", " ", 
      SuperscriptBox["\[Epsilon]", "3"]}], "+", 
     RowBox[{"315904", " ", 
      SuperscriptBox["\[Epsilon]", "4"]}], "+", 
     RowBox[{"152576", " ", 
      SuperscriptBox["\[Epsilon]", "5"]}], "+", 
     RowBox[{"38912", " ", 
      SuperscriptBox["\[Epsilon]", "6"]}], "+", 
     RowBox[{"4096", " ", 
      SuperscriptBox["\[Epsilon]", "7"]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["f", "3"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"16256", " ", "\[Epsilon]"}], "+", 
     RowBox[{"1152", " ", 
      SuperscriptBox["\[Epsilon]", "2"]}], "-", 
     RowBox[{"133248", " ", 
      SuperscriptBox["\[Epsilon]", "3"]}], "-", 
     RowBox[{"277888", " ", 
      SuperscriptBox["\[Epsilon]", "4"]}], "-", 
     RowBox[{"256000", " ", 
      SuperscriptBox["\[Epsilon]", "5"]}], "-", 
     RowBox[{"123904", " ", 
      SuperscriptBox["\[Epsilon]", "6"]}], "-", 
     RowBox[{"30720", " ", 
      SuperscriptBox["\[Epsilon]", "7"]}], "-", 
     RowBox[{"3072", " ", 
      SuperscriptBox["\[Epsilon]", "8"]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["f", "5"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "18624"}], " ", "\[Epsilon]"}], "-", 
     RowBox[{"88544", " ", 
      SuperscriptBox["\[Epsilon]", "2"]}], "-", 
     RowBox[{"172672", " ", 
      SuperscriptBox["\[Epsilon]", "3"]}], "-", 
     RowBox[{"178784", " ", 
      SuperscriptBox["\[Epsilon]", "4"]}], "-", 
     RowBox[{"105696", " ", 
      SuperscriptBox["\[Epsilon]", "5"]}], "-", 
     RowBox[{"35296", " ", 
      SuperscriptBox["\[Epsilon]", "6"]}], "-", 
     RowBox[{"6016", " ", 
      SuperscriptBox["\[Epsilon]", "7"]}], "-", 
     RowBox[{"384", " ", 
      SuperscriptBox["\[Epsilon]", "8"]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["f", "6"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"6688", " ", "\[Epsilon]"}], "+", 
     RowBox[{"29008", " ", 
      SuperscriptBox["\[Epsilon]", "2"]}], "+", 
     RowBox[{"51312", " ", 
      SuperscriptBox["\[Epsilon]", "3"]}], "+", 
     RowBox[{"47488", " ", 
      SuperscriptBox["\[Epsilon]", "4"]}], "+", 
     RowBox[{"24416", " ", 
      SuperscriptBox["\[Epsilon]", "5"]}], "+", 
     RowBox[{"6752", " ", 
      SuperscriptBox["\[Epsilon]", "6"]}], "+", 
     RowBox[{"864", " ", 
      SuperscriptBox["\[Epsilon]", "7"]}], "+", 
     RowBox[{"32", " ", 
      SuperscriptBox["\[Epsilon]", "8"]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["f", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"21824", " ", "\[Epsilon]"}], "+", 
     RowBox[{"129664", " ", 
      SuperscriptBox["\[Epsilon]", "2"]}], "+", 
     RowBox[{"300160", " ", 
      SuperscriptBox["\[Epsilon]", "3"]}], "+", 
     RowBox[{"360960", " ", 
      SuperscriptBox["\[Epsilon]", "4"]}], "+", 
     RowBox[{"246976", " ", 
      SuperscriptBox["\[Epsilon]", "5"]}], "+", 
     RowBox[{"96640", " ", 
      SuperscriptBox["\[Epsilon]", "6"]}], "+", 
     RowBox[{"19968", " ", 
      SuperscriptBox["\[Epsilon]", "7"]}], "+", 
     RowBox[{"1664", " ", 
      SuperscriptBox["\[Epsilon]", "8"]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["f", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "71680"}], " ", "\[Epsilon]"}], "-", 
     RowBox[{"248320", " ", 
      SuperscriptBox["\[Epsilon]", "2"]}], "-", 
     RowBox[{"325888", " ", 
      SuperscriptBox["\[Epsilon]", "3"]}], "-", 
     RowBox[{"181504", " ", 
      SuperscriptBox["\[Epsilon]", "4"]}], "-", 
     RowBox[{"10240", " ", 
      SuperscriptBox["\[Epsilon]", "5"]}], "+", 
     RowBox[{"35328", " ", 
      SuperscriptBox["\[Epsilon]", "6"]}], "+", 
     RowBox[{"15360", " ", 
      SuperscriptBox["\[Epsilon]", "7"]}], "+", 
     RowBox[{"2048", " ", 
      SuperscriptBox["\[Epsilon]", "8"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.7734346264834557`*^9, 3.7734346374641356`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Numerator", "[", "%20", "]"}]], "Input",
 CellChangeTimes->{{3.7670017983534827`*^9, 3.7670017984315915`*^9}},
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "2"}], "+", "f"}], ")"}], " ", "f", " ", "\[Epsilon]", " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "\[Epsilon]"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"f", "-", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", "\[Epsilon]"}], ")"}]}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["f", "6"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Epsilon]"}], ")"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{"3", "+", 
       RowBox[{"2", " ", "\[Epsilon]"}]}], ")"}]}], "-", 
    RowBox[{"64", " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", "\[Epsilon]"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"3", "+", 
        RowBox[{"2", " ", "\[Epsilon]"}]}], ")"}], "3"]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["f", "5"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Epsilon]"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"5", "+", 
       RowBox[{"4", " ", "\[Epsilon]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"5", "+", 
       RowBox[{"\[Epsilon]", " ", 
        RowBox[{"(", 
         RowBox[{"5", "+", "\[Epsilon]"}], ")"}]}]}], ")"}]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["f", "4"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Epsilon]"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"82", "+", 
       RowBox[{"\[Epsilon]", " ", 
        RowBox[{"(", 
         RowBox[{"164", "+", 
          RowBox[{"\[Epsilon]", " ", 
           RowBox[{"(", 
            RowBox[{"113", "+", 
             RowBox[{"2", " ", "\[Epsilon]", " ", 
              RowBox[{"(", 
               RowBox[{"15", "+", "\[Epsilon]"}], ")"}]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}], "-", 
    RowBox[{"32", " ", "f", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "59"}], "+", 
       RowBox[{"2", " ", "\[Epsilon]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "43"}], "+", 
          RowBox[{"\[Epsilon]", " ", 
           RowBox[{"(", 
            RowBox[{"4", "+", 
             RowBox[{"\[Epsilon]", " ", 
              RowBox[{"(", 
               RowBox[{"37", "+", 
                RowBox[{"22", " ", "\[Epsilon]"}], "+", 
                RowBox[{"4", " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}], "+", 
    RowBox[{"16", " ", 
     SuperscriptBox["f", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"52", "+", 
       RowBox[{"\[Epsilon]", " ", 
        RowBox[{"(", 
         RowBox[{"259", "+", 
          RowBox[{"2", " ", "\[Epsilon]", " ", 
           RowBox[{"(", 
            RowBox[{"213", "+", 
             RowBox[{"\[Epsilon]", " ", 
              RowBox[{"(", 
               RowBox[{"161", "+", 
                RowBox[{"58", " ", "\[Epsilon]"}], "+", 
                RowBox[{"8", " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}], "-", 
    RowBox[{"8", " ", 
     SuperscriptBox["f", "3"], " ", 
     RowBox[{"(", 
      RowBox[{"122", "+", 
       RowBox[{"\[Epsilon]", " ", 
        RowBox[{"(", 
         RowBox[{"410", "+", 
          RowBox[{"\[Epsilon]", " ", 
           RowBox[{"(", 
            RowBox[{"525", "+", 
             RowBox[{"2", " ", "\[Epsilon]", " ", 
              RowBox[{"(", 
               RowBox[{"161", "+", 
                RowBox[{"\[Epsilon]", " ", 
                 RowBox[{"(", 
                  RowBox[{"47", "+", 
                   RowBox[{"5", " ", "\[Epsilon]"}]}], ")"}]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7670017995116177`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", "%21", "]"}]], "Input",
 CellChangeTimes->{{3.767001821894487*^9, 3.7670018219726067`*^9}},
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "2"}], "+", "f"}], ")"}], " ", "f", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "4"}], "+", "f", "-", 
    RowBox[{"2", " ", "\[Epsilon]"}]}], ")"}], " ", "\[Epsilon]", " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "\[Epsilon]"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "3456"}], "+", 
    RowBox[{"1888", " ", "f"}], "+", 
    RowBox[{"832", " ", 
     SuperscriptBox["f", "2"]}], "-", 
    RowBox[{"976", " ", 
     SuperscriptBox["f", "3"]}], "+", 
    RowBox[{"328", " ", 
     SuperscriptBox["f", "4"]}], "-", 
    RowBox[{"50", " ", 
     SuperscriptBox["f", "5"]}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["f", "6"]}], "-", 
    RowBox[{"8640", " ", "\[Epsilon]"}], "+", 
    RowBox[{"2752", " ", "f", " ", "\[Epsilon]"}], "+", 
    RowBox[{"4144", " ", 
     SuperscriptBox["f", "2"], " ", "\[Epsilon]"}], "-", 
    RowBox[{"3280", " ", 
     SuperscriptBox["f", "3"], " ", "\[Epsilon]"}], "+", 
    RowBox[{"984", " ", 
     SuperscriptBox["f", "4"], " ", "\[Epsilon]"}], "-", 
    RowBox[{"140", " ", 
     SuperscriptBox["f", "5"], " ", "\[Epsilon]"}], "+", 
    RowBox[{"8", " ", 
     SuperscriptBox["f", "6"], " ", "\[Epsilon]"}], "-", 
    RowBox[{"8064", " ", 
     SuperscriptBox["\[Epsilon]", "2"]}], "-", 
    RowBox[{"256", " ", "f", " ", 
     SuperscriptBox["\[Epsilon]", "2"]}], "+", 
    RowBox[{"6816", " ", 
     SuperscriptBox["f", "2"], " ", 
     SuperscriptBox["\[Epsilon]", "2"]}], "-", 
    RowBox[{"4200", " ", 
     SuperscriptBox["f", "3"], " ", 
     SuperscriptBox["\[Epsilon]", "2"]}], "+", 
    RowBox[{"1108", " ", 
     SuperscriptBox["f", "4"], " ", 
     SuperscriptBox["\[Epsilon]", "2"]}], "-", 
    RowBox[{"140", " ", 
     SuperscriptBox["f", "5"], " ", 
     SuperscriptBox["\[Epsilon]", "2"]}], "+", 
    RowBox[{"7", " ", 
     SuperscriptBox["f", "6"], " ", 
     SuperscriptBox["\[Epsilon]", "2"]}], "-", 
    RowBox[{"3328", " ", 
     SuperscriptBox["\[Epsilon]", "3"]}], "-", 
    RowBox[{"2368", " ", "f", " ", 
     SuperscriptBox["\[Epsilon]", "3"]}], "+", 
    RowBox[{"5152", " ", 
     SuperscriptBox["f", "2"], " ", 
     SuperscriptBox["\[Epsilon]", "3"]}], "-", 
    RowBox[{"2576", " ", 
     SuperscriptBox["f", "3"], " ", 
     SuperscriptBox["\[Epsilon]", "3"]}], "+", 
    RowBox[{"572", " ", 
     SuperscriptBox["f", "4"], " ", 
     SuperscriptBox["\[Epsilon]", "3"]}], "-", 
    RowBox[{"58", " ", 
     SuperscriptBox["f", "5"], " ", 
     SuperscriptBox["\[Epsilon]", "3"]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["f", "6"], " ", 
     SuperscriptBox["\[Epsilon]", "3"]}], "-", 
    RowBox[{"512", " ", 
     SuperscriptBox["\[Epsilon]", "4"]}], "-", 
    RowBox[{"1408", " ", "f", " ", 
     SuperscriptBox["\[Epsilon]", "4"]}], "+", 
    RowBox[{"1856", " ", 
     SuperscriptBox["f", "2"], " ", 
     SuperscriptBox["\[Epsilon]", "4"]}], "-", 
    RowBox[{"752", " ", 
     SuperscriptBox["f", "3"], " ", 
     SuperscriptBox["\[Epsilon]", "4"]}], "+", 
    RowBox[{"128", " ", 
     SuperscriptBox["f", "4"], " ", 
     SuperscriptBox["\[Epsilon]", "4"]}], "-", 
    RowBox[{"8", " ", 
     SuperscriptBox["f", "5"], " ", 
     SuperscriptBox["\[Epsilon]", "4"]}], "-", 
    RowBox[{"256", " ", "f", " ", 
     SuperscriptBox["\[Epsilon]", "5"]}], "+", 
    RowBox[{"256", " ", 
     SuperscriptBox["f", "2"], " ", 
     SuperscriptBox["\[Epsilon]", "5"]}], "-", 
    RowBox[{"80", " ", 
     SuperscriptBox["f", "3"], " ", 
     SuperscriptBox["\[Epsilon]", "5"]}], "+", 
    RowBox[{"8", " ", 
     SuperscriptBox["f", "4"], " ", 
     SuperscriptBox["\[Epsilon]", "5"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.766514771692024*^9, 3.7670018228631587`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n1", ":=", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "f"}], ")"}], " ", "f", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "4"}], "+", "f", "-", 
      RowBox[{"2", " ", "\[Epsilon]"}]}], ")"}], " ", "\[Epsilon]", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Epsilon]"}], ")"}]}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"n2", ":=", 
  RowBox[{"-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "3456"}], "+", 
     RowBox[{"1888", " ", "f"}], "+", 
     RowBox[{"832", " ", 
      SuperscriptBox["f", "2"]}], "-", 
     RowBox[{"976", " ", 
      SuperscriptBox["f", "3"]}], "+", 
     RowBox[{"328", " ", 
      SuperscriptBox["f", "4"]}], "-", 
     RowBox[{"50", " ", 
      SuperscriptBox["f", "5"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox["f", "6"]}], "-", 
     RowBox[{"8640", " ", "\[Epsilon]"}], "+", 
     RowBox[{"2752", " ", "f", " ", "\[Epsilon]"}], "+", 
     RowBox[{"4144", " ", 
      SuperscriptBox["f", "2"], " ", "\[Epsilon]"}], "-", 
     RowBox[{"3280", " ", 
      SuperscriptBox["f", "3"], " ", "\[Epsilon]"}], "+", 
     RowBox[{"984", " ", 
      SuperscriptBox["f", "4"], " ", "\[Epsilon]"}], "-", 
     RowBox[{"140", " ", 
      SuperscriptBox["f", "5"], " ", "\[Epsilon]"}], "+", 
     RowBox[{"8", " ", 
      SuperscriptBox["f", "6"], " ", "\[Epsilon]"}], "-", 
     RowBox[{"8064", " ", 
      SuperscriptBox["\[Epsilon]", "2"]}], "-", 
     RowBox[{"256", " ", "f", " ", 
      SuperscriptBox["\[Epsilon]", "2"]}], "+", 
     RowBox[{"6816", " ", 
      SuperscriptBox["f", "2"], " ", 
      SuperscriptBox["\[Epsilon]", "2"]}], "-", 
     RowBox[{"4200", " ", 
      SuperscriptBox["f", "3"], " ", 
      SuperscriptBox["\[Epsilon]", "2"]}], "+", 
     RowBox[{"1108", " ", 
      SuperscriptBox["f", "4"], " ", 
      SuperscriptBox["\[Epsilon]", "2"]}], "-", 
     RowBox[{"140", " ", 
      SuperscriptBox["f", "5"], " ", 
      SuperscriptBox["\[Epsilon]", "2"]}], "+", 
     RowBox[{"7", " ", 
      SuperscriptBox["f", "6"], " ", 
      SuperscriptBox["\[Epsilon]", "2"]}], "-", 
     RowBox[{"3328", " ", 
      SuperscriptBox["\[Epsilon]", "3"]}], "-", 
     RowBox[{"2368", " ", "f", " ", 
      SuperscriptBox["\[Epsilon]", "3"]}], "+", 
     RowBox[{"5152", " ", 
      SuperscriptBox["f", "2"], " ", 
      SuperscriptBox["\[Epsilon]", "3"]}], "-", 
     RowBox[{"2576", " ", 
      SuperscriptBox["f", "3"], " ", 
      SuperscriptBox["\[Epsilon]", "3"]}], "+", 
     RowBox[{"572", " ", 
      SuperscriptBox["f", "4"], " ", 
      SuperscriptBox["\[Epsilon]", "3"]}], "-", 
     RowBox[{"58", " ", 
      SuperscriptBox["f", "5"], " ", 
      SuperscriptBox["\[Epsilon]", "3"]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["f", "6"], " ", 
      SuperscriptBox["\[Epsilon]", "3"]}], "-", 
     RowBox[{"512", " ", 
      SuperscriptBox["\[Epsilon]", "4"]}], "-", 
     RowBox[{"1408", " ", "f", " ", 
      SuperscriptBox["\[Epsilon]", "4"]}], "+", 
     RowBox[{"1856", " ", 
      SuperscriptBox["f", "2"], " ", 
      SuperscriptBox["\[Epsilon]", "4"]}], "-", 
     RowBox[{"752", " ", 
      SuperscriptBox["f", "3"], " ", 
      SuperscriptBox["\[Epsilon]", "4"]}], "+", 
     RowBox[{"128", " ", 
      SuperscriptBox["f", "4"], " ", 
      SuperscriptBox["\[Epsilon]", "4"]}], "-", 
     RowBox[{"8", " ", 
      SuperscriptBox["f", "5"], " ", 
      SuperscriptBox["\[Epsilon]", "4"]}], "-", 
     RowBox[{"256", " ", "f", " ", 
      SuperscriptBox["\[Epsilon]", "5"]}], "+", 
     RowBox[{"256", " ", 
      SuperscriptBox["f", "2"], " ", 
      SuperscriptBox["\[Epsilon]", "5"]}], "-", 
     RowBox[{"80", " ", 
      SuperscriptBox["f", "3"], " ", 
      SuperscriptBox["\[Epsilon]", "5"]}], "+", 
     RowBox[{"8", " ", 
      SuperscriptBox["f", "4"], " ", 
      SuperscriptBox["\[Epsilon]", "5"]}]}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.7665143122168407`*^9, 3.7665143196115074`*^9}, {
  3.766514406512138*^9, 3.7665144129717317`*^9}, {3.766514789196768*^9, 
  3.766514800415103*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"let", " ", "NUM"}], "=", 
    RowBox[{"n1", "*", "n2"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"n1", ">", "0"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.766514437040944*^9, 3.766514463021102*^9}, {
  3.766515156110529*^9, 3.7665151575007334`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{"n2", ",", "\[Epsilon]"}], "]"}]], "Input",
 CellChangeTimes->{{3.766514843780919*^9, 3.7665148442656417`*^9}, {
  3.7665151295819955`*^9, 3.7665151310861635`*^9}},
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"3456", "-", 
  RowBox[{"1888", " ", "f"}], "-", 
  RowBox[{"832", " ", 
   SuperscriptBox["f", "2"]}], "+", 
  RowBox[{"976", " ", 
   SuperscriptBox["f", "3"]}], "-", 
  RowBox[{"328", " ", 
   SuperscriptBox["f", "4"]}], "+", 
  RowBox[{"50", " ", 
   SuperscriptBox["f", "5"]}], "-", 
  RowBox[{"3", " ", 
   SuperscriptBox["f", "6"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"8640", "-", 
     RowBox[{"2752", " ", "f"}], "-", 
     RowBox[{"4144", " ", 
      SuperscriptBox["f", "2"]}], "+", 
     RowBox[{"3280", " ", 
      SuperscriptBox["f", "3"]}], "-", 
     RowBox[{"984", " ", 
      SuperscriptBox["f", "4"]}], "+", 
     RowBox[{"140", " ", 
      SuperscriptBox["f", "5"]}], "-", 
     RowBox[{"8", " ", 
      SuperscriptBox["f", "6"]}]}], ")"}], " ", "\[Epsilon]"}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"8064", "+", 
     RowBox[{"256", " ", "f"}], "-", 
     RowBox[{"6816", " ", 
      SuperscriptBox["f", "2"]}], "+", 
     RowBox[{"4200", " ", 
      SuperscriptBox["f", "3"]}], "-", 
     RowBox[{"1108", " ", 
      SuperscriptBox["f", "4"]}], "+", 
     RowBox[{"140", " ", 
      SuperscriptBox["f", "5"]}], "-", 
     RowBox[{"7", " ", 
      SuperscriptBox["f", "6"]}]}], ")"}], " ", 
   SuperscriptBox["\[Epsilon]", "2"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"3328", "+", 
     RowBox[{"2368", " ", "f"}], "-", 
     RowBox[{"5152", " ", 
      SuperscriptBox["f", "2"]}], "+", 
     RowBox[{"2576", " ", 
      SuperscriptBox["f", "3"]}], "-", 
     RowBox[{"572", " ", 
      SuperscriptBox["f", "4"]}], "+", 
     RowBox[{"58", " ", 
      SuperscriptBox["f", "5"]}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["f", "6"]}]}], ")"}], " ", 
   SuperscriptBox["\[Epsilon]", "3"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"512", "+", 
     RowBox[{"1408", " ", "f"}], "-", 
     RowBox[{"1856", " ", 
      SuperscriptBox["f", "2"]}], "+", 
     RowBox[{"752", " ", 
      SuperscriptBox["f", "3"]}], "-", 
     RowBox[{"128", " ", 
      SuperscriptBox["f", "4"]}], "+", 
     RowBox[{"8", " ", 
      SuperscriptBox["f", "5"]}]}], ")"}], " ", 
   SuperscriptBox["\[Epsilon]", "4"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"256", " ", "f"}], "-", 
     RowBox[{"256", " ", 
      SuperscriptBox["f", "2"]}], "+", 
     RowBox[{"80", " ", 
      SuperscriptBox["f", "3"]}], "-", 
     RowBox[{"8", " ", 
      SuperscriptBox["f", "4"]}]}], ")"}], " ", 
   SuperscriptBox["\[Epsilon]", "5"]}]}]], "Output",
 CellChangeTimes->{3.7665144803626647`*^9, 3.766514845711816*^9, 
  3.7665151321065707`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"n2", ">", 
   RowBox[{"0", "--"}], ">", "NUM", ">", "0"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7665151385263276`*^9, 3.7665151516633854`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Denominator", "[", "%20", "]"}]], "Input",
 CellChangeTimes->{{3.767001858612858*^9, 3.767001858659729*^9}},
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["f", "5"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Epsilon]"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"5", "+", 
       RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}], "-", 
    RowBox[{"32", " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", "\[Epsilon]"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"39", "+", 
       RowBox[{"4", " ", "\[Epsilon]", " ", 
        RowBox[{"(", 
         RowBox[{"19", "+", 
          RowBox[{"\[Epsilon]", " ", 
           RowBox[{"(", 
            RowBox[{"15", "+", 
             RowBox[{"\[Epsilon]", " ", 
              RowBox[{"(", 
               RowBox[{"6", "+", "\[Epsilon]"}], ")"}]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}], "-", 
    RowBox[{"4", " ", 
     SuperscriptBox["f", "4"], " ", 
     RowBox[{"(", 
      RowBox[{"22", "+", 
       RowBox[{"\[Epsilon]", " ", 
        RowBox[{"(", 
         RowBox[{"40", "+", 
          RowBox[{"\[Epsilon]", " ", 
           RowBox[{"(", 
            RowBox[{"25", "+", 
             RowBox[{"\[Epsilon]", " ", 
              RowBox[{"(", 
               RowBox[{"7", "+", "\[Epsilon]"}], ")"}]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}], "+", 
    RowBox[{"16", " ", "f", " ", 
     RowBox[{"(", 
      RowBox[{"227", "+", 
       RowBox[{"\[Epsilon]", " ", 
        RowBox[{"(", 
         RowBox[{"525", "+", 
          RowBox[{"\[Epsilon]", " ", 
           RowBox[{"(", 
            RowBox[{"513", "+", 
             RowBox[{"2", " ", "\[Epsilon]", " ", 
              RowBox[{"(", 
               RowBox[{"137", "+", 
                RowBox[{"5", " ", "\[Epsilon]", " ", 
                 RowBox[{"(", 
                  RowBox[{"8", "+", "\[Epsilon]"}], ")"}]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["f", "3"], " ", 
     RowBox[{"(", 
      RowBox[{"153", "+", 
       RowBox[{"\[Epsilon]", " ", 
        RowBox[{"(", 
         RowBox[{"306", "+", 
          RowBox[{"\[Epsilon]", " ", 
           RowBox[{"(", 
            RowBox[{"241", "+", 
             RowBox[{"\[Epsilon]", " ", 
              RowBox[{"(", 
               RowBox[{"99", "+", 
                RowBox[{"2", " ", "\[Epsilon]", " ", 
                 RowBox[{"(", 
                  RowBox[{"11", "+", "\[Epsilon]"}], ")"}]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}], "-", 
    RowBox[{"8", " ", 
     SuperscriptBox["f", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"264", "+", 
       RowBox[{"\[Epsilon]", " ", 
        RowBox[{"(", 
         RowBox[{"571", "+", 
          RowBox[{"2", " ", "\[Epsilon]", " ", 
           RowBox[{"(", 
            RowBox[{"257", "+", 
             RowBox[{"2", " ", "\[Epsilon]", " ", 
              RowBox[{"(", 
               RowBox[{"63", "+", 
                RowBox[{"\[Epsilon]", " ", 
                 RowBox[{"(", 
                  RowBox[{"17", "+", 
                   RowBox[{"2", " ", "\[Epsilon]"}]}], ")"}]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["f", "5"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Epsilon]"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"5", "+", 
       RowBox[{"\[Epsilon]", " ", 
        RowBox[{"(", 
         RowBox[{"4", "+", "\[Epsilon]"}], ")"}]}]}], ")"}]}], "-", 
    RowBox[{"32", " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", "\[Epsilon]"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"39", "+", 
       RowBox[{"4", " ", "\[Epsilon]", " ", 
        RowBox[{"(", 
         RowBox[{"19", "+", 
          RowBox[{"\[Epsilon]", " ", 
           RowBox[{"(", 
            RowBox[{"15", "+", 
             RowBox[{"\[Epsilon]", " ", 
              RowBox[{"(", 
               RowBox[{"6", "+", "\[Epsilon]"}], ")"}]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["f", "4"], " ", 
     RowBox[{"(", 
      RowBox[{"44", "+", 
       RowBox[{"\[Epsilon]", " ", 
        RowBox[{"(", 
         RowBox[{"82", "+", 
          RowBox[{"\[Epsilon]", " ", 
           RowBox[{"(", 
            RowBox[{"57", "+", 
             RowBox[{"\[Epsilon]", " ", 
              RowBox[{"(", 
               RowBox[{"20", "+", 
                RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["f", "3"], " ", 
     RowBox[{"(", 
      RowBox[{"153", "+", 
       RowBox[{"\[Epsilon]", " ", 
        RowBox[{"(", 
         RowBox[{"303", "+", 
          RowBox[{"\[Epsilon]", " ", 
           RowBox[{"(", 
            RowBox[{"243", "+", 
             RowBox[{"2", " ", "\[Epsilon]", " ", 
              RowBox[{"(", 
               RowBox[{"53", "+", 
                RowBox[{"\[Epsilon]", " ", 
                 RowBox[{"(", 
                  RowBox[{"12", "+", "\[Epsilon]"}], ")"}]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}], "-", 
    RowBox[{"8", " ", 
     SuperscriptBox["f", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"264", "+", 
       RowBox[{"\[Epsilon]", " ", 
        RowBox[{"(", 
         RowBox[{"561", "+", 
          RowBox[{"4", " ", "\[Epsilon]", " ", 
           RowBox[{"(", 
            RowBox[{"125", "+", 
             RowBox[{"\[Epsilon]", " ", 
              RowBox[{"(", 
               RowBox[{"62", "+", 
                RowBox[{"\[Epsilon]", " ", 
                 RowBox[{"(", 
                  RowBox[{"17", "+", 
                   RowBox[{"2", " ", "\[Epsilon]"}]}], ")"}]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
    RowBox[{"16", " ", "f", " ", 
     RowBox[{"(", 
      RowBox[{"227", "+", 
       RowBox[{"\[Epsilon]", " ", 
        RowBox[{"(", 
         RowBox[{"519", "+", 
          RowBox[{"\[Epsilon]", " ", 
           RowBox[{"(", 
            RowBox[{"502", "+", 
             RowBox[{"\[Epsilon]", " ", 
              RowBox[{"(", 
               RowBox[{"268", "+", 
                RowBox[{"\[Epsilon]", " ", 
                 RowBox[{"(", 
                  RowBox[{"79", "+", 
                   RowBox[{"10", " ", "\[Epsilon]"}]}], ")"}]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.766512096555416*^9, 3.7670018594363065`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", "%23", "]"}]], "Input",
 CellChangeTimes->{{3.7670018634325123`*^9, 3.7670018634950085`*^9}},
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "2496"}], "+", 
    RowBox[{"3632", " ", "f"}], "-", 
    RowBox[{"2112", " ", 
     SuperscriptBox["f", "2"]}], "+", 
    RowBox[{"612", " ", 
     SuperscriptBox["f", "3"]}], "-", 
    RowBox[{"88", " ", 
     SuperscriptBox["f", "4"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["f", "5"]}], "-", 
    RowBox[{"6112", " ", "\[Epsilon]"}], "+", 
    RowBox[{"8304", " ", "f", " ", "\[Epsilon]"}], "-", 
    RowBox[{"4488", " ", 
     SuperscriptBox["f", "2"], " ", "\[Epsilon]"}], "+", 
    RowBox[{"1212", " ", 
     SuperscriptBox["f", "3"], " ", "\[Epsilon]"}], "-", 
    RowBox[{"164", " ", 
     SuperscriptBox["f", "4"], " ", "\[Epsilon]"}], "+", 
    RowBox[{"9", " ", 
     SuperscriptBox["f", "5"], " ", "\[Epsilon]"}], "-", 
    RowBox[{"6272", " ", 
     SuperscriptBox["\[Epsilon]", "2"]}], "+", 
    RowBox[{"8032", " ", "f", " ", 
     SuperscriptBox["\[Epsilon]", "2"]}], "-", 
    RowBox[{"4000", " ", 
     SuperscriptBox["f", "2"], " ", 
     SuperscriptBox["\[Epsilon]", "2"]}], "+", 
    RowBox[{"972", " ", 
     SuperscriptBox["f", "3"], " ", 
     SuperscriptBox["\[Epsilon]", "2"]}], "-", 
    RowBox[{"114", " ", 
     SuperscriptBox["f", "4"], " ", 
     SuperscriptBox["\[Epsilon]", "2"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["f", "5"], " ", 
     SuperscriptBox["\[Epsilon]", "2"]}], "-", 
    RowBox[{"3456", " ", 
     SuperscriptBox["\[Epsilon]", "3"]}], "+", 
    RowBox[{"4288", " ", "f", " ", 
     SuperscriptBox["\[Epsilon]", "3"]}], "-", 
    RowBox[{"1984", " ", 
     SuperscriptBox["f", "2"], " ", 
     SuperscriptBox["\[Epsilon]", "3"]}], "+", 
    RowBox[{"424", " ", 
     SuperscriptBox["f", "3"], " ", 
     SuperscriptBox["\[Epsilon]", "3"]}], "-", 
    RowBox[{"40", " ", 
     SuperscriptBox["f", "4"], " ", 
     SuperscriptBox["\[Epsilon]", "3"]}], "+", 
    RowBox[{
     SuperscriptBox["f", "5"], " ", 
     SuperscriptBox["\[Epsilon]", "3"]}], "-", 
    RowBox[{"1024", " ", 
     SuperscriptBox["\[Epsilon]", "4"]}], "+", 
    RowBox[{"1264", " ", "f", " ", 
     SuperscriptBox["\[Epsilon]", "4"]}], "-", 
    RowBox[{"544", " ", 
     SuperscriptBox["f", "2"], " ", 
     SuperscriptBox["\[Epsilon]", "4"]}], "+", 
    RowBox[{"96", " ", 
     SuperscriptBox["f", "3"], " ", 
     SuperscriptBox["\[Epsilon]", "4"]}], "-", 
    RowBox[{"6", " ", 
     SuperscriptBox["f", "4"], " ", 
     SuperscriptBox["\[Epsilon]", "4"]}], "-", 
    RowBox[{"128", " ", 
     SuperscriptBox["\[Epsilon]", "5"]}], "+", 
    RowBox[{"160", " ", "f", " ", 
     SuperscriptBox["\[Epsilon]", "5"]}], "-", 
    RowBox[{"64", " ", 
     SuperscriptBox["f", "2"], " ", 
     SuperscriptBox["\[Epsilon]", "5"]}], "+", 
    RowBox[{"8", " ", 
     SuperscriptBox["f", "3"], " ", 
     SuperscriptBox["\[Epsilon]", "5"]}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "2496"}], "+", 
    RowBox[{"3632", " ", "f"}], "-", 
    RowBox[{"2112", " ", 
     SuperscriptBox["f", "2"]}], "+", 
    RowBox[{"612", " ", 
     SuperscriptBox["f", "3"]}], "-", 
    RowBox[{"88", " ", 
     SuperscriptBox["f", "4"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["f", "5"]}], "-", 
    RowBox[{"6112", " ", "\[Epsilon]"}], "+", 
    RowBox[{"8400", " ", "f", " ", "\[Epsilon]"}], "-", 
    RowBox[{"4568", " ", 
     SuperscriptBox["f", "2"], " ", "\[Epsilon]"}], "+", 
    RowBox[{"1224", " ", 
     SuperscriptBox["f", "3"], " ", "\[Epsilon]"}], "-", 
    RowBox[{"160", " ", 
     SuperscriptBox["f", "4"], " ", "\[Epsilon]"}], "+", 
    RowBox[{"8", " ", 
     SuperscriptBox["f", "5"], " ", "\[Epsilon]"}], "-", 
    RowBox[{"6272", " ", 
     SuperscriptBox["\[Epsilon]", "2"]}], "+", 
    RowBox[{"8208", " ", "f", " ", 
     SuperscriptBox["\[Epsilon]", "2"]}], "-", 
    RowBox[{"4112", " ", 
     SuperscriptBox["f", "2"], " ", 
     SuperscriptBox["\[Epsilon]", "2"]}], "+", 
    RowBox[{"964", " ", 
     SuperscriptBox["f", "3"], " ", 
     SuperscriptBox["\[Epsilon]", "2"]}], "-", 
    RowBox[{"100", " ", 
     SuperscriptBox["f", "4"], " ", 
     SuperscriptBox["\[Epsilon]", "2"]}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["f", "5"], " ", 
     SuperscriptBox["\[Epsilon]", "2"]}], "-", 
    RowBox[{"3456", " ", 
     SuperscriptBox["\[Epsilon]", "3"]}], "+", 
    RowBox[{"4384", " ", "f", " ", 
     SuperscriptBox["\[Epsilon]", "3"]}], "-", 
    RowBox[{"2016", " ", 
     SuperscriptBox["f", "2"], " ", 
     SuperscriptBox["\[Epsilon]", "3"]}], "+", 
    RowBox[{"396", " ", 
     SuperscriptBox["f", "3"], " ", 
     SuperscriptBox["\[Epsilon]", "3"]}], "-", 
    RowBox[{"28", " ", 
     SuperscriptBox["f", "4"], " ", 
     SuperscriptBox["\[Epsilon]", "3"]}], "-", 
    RowBox[{"1024", " ", 
     SuperscriptBox["\[Epsilon]", "4"]}], "+", 
    RowBox[{"1280", " ", "f", " ", 
     SuperscriptBox["\[Epsilon]", "4"]}], "-", 
    RowBox[{"544", " ", 
     SuperscriptBox["f", "2"], " ", 
     SuperscriptBox["\[Epsilon]", "4"]}], "+", 
    RowBox[{"88", " ", 
     SuperscriptBox["f", "3"], " ", 
     SuperscriptBox["\[Epsilon]", "4"]}], "-", 
    RowBox[{"4", " ", 
     SuperscriptBox["f", "4"], " ", 
     SuperscriptBox["\[Epsilon]", "4"]}], "-", 
    RowBox[{"128", " ", 
     SuperscriptBox["\[Epsilon]", "5"]}], "+", 
    RowBox[{"160", " ", "f", " ", 
     SuperscriptBox["\[Epsilon]", "5"]}], "-", 
    RowBox[{"64", " ", 
     SuperscriptBox["f", "2"], " ", 
     SuperscriptBox["\[Epsilon]", "5"]}], "+", 
    RowBox[{"8", " ", 
     SuperscriptBox["f", "3"], " ", 
     SuperscriptBox["\[Epsilon]", "5"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.767001863974845*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Denominatior", "=", 
    RowBox[{"a", "*", "b"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"a", ":=", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2496"}], "+", 
       RowBox[{"3632", " ", "f"}], "-", 
       RowBox[{"2112", " ", 
        SuperscriptBox["f", "2"]}], "+", 
       RowBox[{"612", " ", 
        SuperscriptBox["f", "3"]}], "-", 
       RowBox[{"88", " ", 
        SuperscriptBox["f", "4"]}], "+", 
       RowBox[{"5", " ", 
        SuperscriptBox["f", "5"]}], "-", 
       RowBox[{"6112", " ", "\[Epsilon]"}], "+", 
       RowBox[{"8304", " ", "f", " ", "\[Epsilon]"}], "-", 
       RowBox[{"4488", " ", 
        SuperscriptBox["f", "2"], " ", "\[Epsilon]"}], "+", 
       RowBox[{"1212", " ", 
        SuperscriptBox["f", "3"], " ", "\[Epsilon]"}], "-", 
       RowBox[{"164", " ", 
        SuperscriptBox["f", "4"], " ", "\[Epsilon]"}], "+", 
       RowBox[{"9", " ", 
        SuperscriptBox["f", "5"], " ", "\[Epsilon]"}], "-", 
       RowBox[{"6272", " ", 
        SuperscriptBox["\[Epsilon]", "2"]}], "+", 
       RowBox[{"8032", " ", "f", " ", 
        SuperscriptBox["\[Epsilon]", "2"]}], "-", 
       RowBox[{"4000", " ", 
        SuperscriptBox["f", "2"], " ", 
        SuperscriptBox["\[Epsilon]", "2"]}], "+", 
       RowBox[{"972", " ", 
        SuperscriptBox["f", "3"], " ", 
        SuperscriptBox["\[Epsilon]", "2"]}], "-", 
       RowBox[{"114", " ", 
        SuperscriptBox["f", "4"], " ", 
        SuperscriptBox["\[Epsilon]", "2"]}], "+", 
       RowBox[{"5", " ", 
        SuperscriptBox["f", "5"], " ", 
        SuperscriptBox["\[Epsilon]", "2"]}], "-", 
       RowBox[{"3456", " ", 
        SuperscriptBox["\[Epsilon]", "3"]}], "+", 
       RowBox[{"4288", " ", "f", " ", 
        SuperscriptBox["\[Epsilon]", "3"]}], "-", 
       RowBox[{"1984", " ", 
        SuperscriptBox["f", "2"], " ", 
        SuperscriptBox["\[Epsilon]", "3"]}], "+", 
       RowBox[{"424", " ", 
        SuperscriptBox["f", "3"], " ", 
        SuperscriptBox["\[Epsilon]", "3"]}], "-", 
       RowBox[{"40", " ", 
        SuperscriptBox["f", "4"], " ", 
        SuperscriptBox["\[Epsilon]", "3"]}], "+", 
       RowBox[{
        SuperscriptBox["f", "5"], " ", 
        SuperscriptBox["\[Epsilon]", "3"]}], "-", 
       RowBox[{"1024", " ", 
        SuperscriptBox["\[Epsilon]", "4"]}], "+", 
       RowBox[{"1264", " ", "f", " ", 
        SuperscriptBox["\[Epsilon]", "4"]}], "-", 
       RowBox[{"544", " ", 
        SuperscriptBox["f", "2"], " ", 
        SuperscriptBox["\[Epsilon]", "4"]}], "+", 
       RowBox[{"96", " ", 
        SuperscriptBox["f", "3"], " ", 
        SuperscriptBox["\[Epsilon]", "4"]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["f", "4"], " ", 
        SuperscriptBox["\[Epsilon]", "4"]}], "-", 
       RowBox[{"128", " ", 
        SuperscriptBox["\[Epsilon]", "5"]}], "+", 
       RowBox[{"160", " ", "f", " ", 
        SuperscriptBox["\[Epsilon]", "5"]}], "-", 
       RowBox[{"64", " ", 
        SuperscriptBox["f", "2"], " ", 
        SuperscriptBox["\[Epsilon]", "5"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["f", "3"], " ", 
        SuperscriptBox["\[Epsilon]", "5"]}]}], ")"}]}]}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"b", ":=", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2496"}], "+", 
       RowBox[{"3632", " ", "f"}], "-", 
       RowBox[{"2112", " ", 
        SuperscriptBox["f", "2"]}], "+", 
       RowBox[{"612", " ", 
        SuperscriptBox["f", "3"]}], "-", 
       RowBox[{"88", " ", 
        SuperscriptBox["f", "4"]}], "+", 
       RowBox[{"5", " ", 
        SuperscriptBox["f", "5"]}], "-", 
       RowBox[{"6112", " ", "\[Epsilon]"}], "+", 
       RowBox[{"8400", " ", "f", " ", "\[Epsilon]"}], "-", 
       RowBox[{"4568", " ", 
        SuperscriptBox["f", "2"], " ", "\[Epsilon]"}], "+", 
       RowBox[{"1224", " ", 
        SuperscriptBox["f", "3"], " ", "\[Epsilon]"}], "-", 
       RowBox[{"160", " ", 
        SuperscriptBox["f", "4"], " ", "\[Epsilon]"}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["f", "5"], " ", "\[Epsilon]"}], "-", 
       RowBox[{"6272", " ", 
        SuperscriptBox["\[Epsilon]", "2"]}], "+", 
       RowBox[{"8208", " ", "f", " ", 
        SuperscriptBox["\[Epsilon]", "2"]}], "-", 
       RowBox[{"4112", " ", 
        SuperscriptBox["f", "2"], " ", 
        SuperscriptBox["\[Epsilon]", "2"]}], "+", 
       RowBox[{"964", " ", 
        SuperscriptBox["f", "3"], " ", 
        SuperscriptBox["\[Epsilon]", "2"]}], "-", 
       RowBox[{"100", " ", 
        SuperscriptBox["f", "4"], " ", 
        SuperscriptBox["\[Epsilon]", "2"]}], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["f", "5"], " ", 
        SuperscriptBox["\[Epsilon]", "2"]}], "-", 
       RowBox[{"3456", " ", 
        SuperscriptBox["\[Epsilon]", "3"]}], "+", 
       RowBox[{"4384", " ", "f", " ", 
        SuperscriptBox["\[Epsilon]", "3"]}], "-", 
       RowBox[{"2016", " ", 
        SuperscriptBox["f", "2"], " ", 
        SuperscriptBox["\[Epsilon]", "3"]}], "+", 
       RowBox[{"396", " ", 
        SuperscriptBox["f", "3"], " ", 
        SuperscriptBox["\[Epsilon]", "3"]}], "-", 
       RowBox[{"28", " ", 
        SuperscriptBox["f", "4"], " ", 
        SuperscriptBox["\[Epsilon]", "3"]}], "-", 
       RowBox[{"1024", " ", 
        SuperscriptBox["\[Epsilon]", "4"]}], "+", 
       RowBox[{"1280", " ", "f", " ", 
        SuperscriptBox["\[Epsilon]", "4"]}], "-", 
       RowBox[{"544", " ", 
        SuperscriptBox["f", "2"], " ", 
        SuperscriptBox["\[Epsilon]", "4"]}], "+", 
       RowBox[{"88", " ", 
        SuperscriptBox["f", "3"], " ", 
        SuperscriptBox["\[Epsilon]", "4"]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["f", "4"], " ", 
        SuperscriptBox["\[Epsilon]", "4"]}], "-", 
       RowBox[{"128", " ", 
        SuperscriptBox["\[Epsilon]", "5"]}], "+", 
       RowBox[{"160", " ", "f", " ", 
        SuperscriptBox["\[Epsilon]", "5"]}], "-", 
       RowBox[{"64", " ", 
        SuperscriptBox["f", "2"], " ", 
        SuperscriptBox["\[Epsilon]", "5"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["f", "3"], " ", 
        SuperscriptBox["\[Epsilon]", "5"]}]}], ")"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.7665130751181393`*^9, 3.7665130986858406`*^9}, {
  3.7670019581590743`*^9, 3.7670019670967255`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", 
  RowBox[{"a", "-", "b"}], "]"}]], "Input",
 CellChangeTimes->{{3.7670018943467135`*^9, 3.7670018970615134`*^9}},
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "f"}], ")"}]}], " ", "f", " ", "\[Epsilon]", 
  " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "\[Epsilon]"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"48", "-", 
    RowBox[{"16", " ", "f"}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["f", "2"]}], "+", 
    SuperscriptBox["f", "3"], "+", 
    RowBox[{"40", " ", "\[Epsilon]"}], "+", 
    RowBox[{"4", " ", "f", " ", "\[Epsilon]"}], "-", 
    RowBox[{"8", " ", 
     SuperscriptBox["f", "2"], " ", "\[Epsilon]"}], "+", 
    RowBox[{
     SuperscriptBox["f", "3"], " ", "\[Epsilon]"}], "+", 
    RowBox[{"8", " ", 
     SuperscriptBox["\[Epsilon]", "2"]}], "+", 
    RowBox[{"4", " ", "f", " ", 
     SuperscriptBox["\[Epsilon]", "2"]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["f", "2"], " ", 
     SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.766513284791237*^9, 3.7670019051373177`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"a", "-", "b"}], "=", 
    RowBox[{
     RowBox[{"x", "\[IndentingNewLine]", "x"}], "=", 
     RowBox[{"x1", "*", "x2"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"x1", ":=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "f"}], ")"}]}], " ", "f", " ", "\[Epsilon]", 
     " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Epsilon]"}], ")"}]}]}], " ", "\[IndentingNewLine]", 
   RowBox[{"x2", ":=", 
    RowBox[{"(", 
     RowBox[{"48", "-", 
      RowBox[{"16", " ", "f"}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["f", "2"]}], "+", 
      SuperscriptBox["f", "3"], "+", 
      RowBox[{"40", " ", "\[Epsilon]"}], "+", 
      RowBox[{"4", " ", "f", " ", "\[Epsilon]"}], "-", 
      RowBox[{"8", " ", 
       SuperscriptBox["f", "2"], " ", "\[Epsilon]"}], "+", 
      RowBox[{
       SuperscriptBox["f", "3"], " ", "\[Epsilon]"}], "+", 
      RowBox[{"8", " ", 
       SuperscriptBox["\[Epsilon]", "2"]}], "+", 
      RowBox[{"4", " ", "f", " ", 
       SuperscriptBox["\[Epsilon]", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["f", "2"], " ", 
       SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "We", " ", "can", " ", "see", " ", "x1", " ", "and", " ", "x2", " ", 
      "are", " ", 
      RowBox[{"positive", "--"}]}], ">", " ", 
     RowBox[{"x", " ", "positive"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Denominator", "=", 
      RowBox[{
       RowBox[{"a", "*", "b"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", "+", "b"}], ")"}], "b"}], "=", 
        RowBox[{
         RowBox[{"b", "^", "2"}], "+", "xb"}]}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"positive", " ", "if", " ", "xb"}], ">", "0"}], ",", " ", 
     RowBox[{
      RowBox[{"we", " ", "know", " ", "x"}], ">", 
      RowBox[{"0", " ", "from", " ", "above", " ", "b"}], ">", 
      RowBox[{"0", " ", "sufficient"}]}]}], "*)"}], "\[IndentingNewLine]", 
   "b"}]}]], "Input",
 CellChangeTimes->{{3.7665131926525564`*^9, 3.7665132760295706`*^9}, {
   3.7665133811043944`*^9, 3.766513500620226*^9}, {3.767001914151153*^9, 
   3.767001941527288*^9}, 3.7670019962498965`*^9}],

Cell[BoxData[
 RowBox[{"2496", "-", 
  RowBox[{"3632", " ", "f"}], "+", 
  RowBox[{"2112", " ", 
   SuperscriptBox["f", "2"]}], "-", 
  RowBox[{"612", " ", 
   SuperscriptBox["f", "3"]}], "+", 
  RowBox[{"88", " ", 
   SuperscriptBox["f", "4"]}], "-", 
  RowBox[{"5", " ", 
   SuperscriptBox["f", "5"]}], "+", 
  RowBox[{"6112", " ", "\[Epsilon]"}], "-", 
  RowBox[{"8400", " ", "f", " ", "\[Epsilon]"}], "+", 
  RowBox[{"4568", " ", 
   SuperscriptBox["f", "2"], " ", "\[Epsilon]"}], "-", 
  RowBox[{"1224", " ", 
   SuperscriptBox["f", "3"], " ", "\[Epsilon]"}], "+", 
  RowBox[{"160", " ", 
   SuperscriptBox["f", "4"], " ", "\[Epsilon]"}], "-", 
  RowBox[{"8", " ", 
   SuperscriptBox["f", "5"], " ", "\[Epsilon]"}], "+", 
  RowBox[{"6272", " ", 
   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
  RowBox[{"8208", " ", "f", " ", 
   SuperscriptBox["\[Epsilon]", "2"]}], "+", 
  RowBox[{"4112", " ", 
   SuperscriptBox["f", "2"], " ", 
   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
  RowBox[{"964", " ", 
   SuperscriptBox["f", "3"], " ", 
   SuperscriptBox["\[Epsilon]", "2"]}], "+", 
  RowBox[{"100", " ", 
   SuperscriptBox["f", "4"], " ", 
   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
  RowBox[{"3", " ", 
   SuperscriptBox["f", "5"], " ", 
   SuperscriptBox["\[Epsilon]", "2"]}], "+", 
  RowBox[{"3456", " ", 
   SuperscriptBox["\[Epsilon]", "3"]}], "-", 
  RowBox[{"4384", " ", "f", " ", 
   SuperscriptBox["\[Epsilon]", "3"]}], "+", 
  RowBox[{"2016", " ", 
   SuperscriptBox["f", "2"], " ", 
   SuperscriptBox["\[Epsilon]", "3"]}], "-", 
  RowBox[{"396", " ", 
   SuperscriptBox["f", "3"], " ", 
   SuperscriptBox["\[Epsilon]", "3"]}], "+", 
  RowBox[{"28", " ", 
   SuperscriptBox["f", "4"], " ", 
   SuperscriptBox["\[Epsilon]", "3"]}], "+", 
  RowBox[{"1024", " ", 
   SuperscriptBox["\[Epsilon]", "4"]}], "-", 
  RowBox[{"1280", " ", "f", " ", 
   SuperscriptBox["\[Epsilon]", "4"]}], "+", 
  RowBox[{"544", " ", 
   SuperscriptBox["f", "2"], " ", 
   SuperscriptBox["\[Epsilon]", "4"]}], "-", 
  RowBox[{"88", " ", 
   SuperscriptBox["f", "3"], " ", 
   SuperscriptBox["\[Epsilon]", "4"]}], "+", 
  RowBox[{"4", " ", 
   SuperscriptBox["f", "4"], " ", 
   SuperscriptBox["\[Epsilon]", "4"]}], "+", 
  RowBox[{"128", " ", 
   SuperscriptBox["\[Epsilon]", "5"]}], "-", 
  RowBox[{"160", " ", "f", " ", 
   SuperscriptBox["\[Epsilon]", "5"]}], "+", 
  RowBox[{"64", " ", 
   SuperscriptBox["f", "2"], " ", 
   SuperscriptBox["\[Epsilon]", "5"]}], "-", 
  RowBox[{"8", " ", 
   SuperscriptBox["f", "3"], " ", 
   SuperscriptBox["\[Epsilon]", "5"]}]}]], "Output",
 CellChangeTimes->{
  3.766513260693022*^9, 3.766513294993785*^9, {3.7665134943237553`*^9, 
   3.7665135011026*^9}, {3.767001927025942*^9, 3.767001942605032*^9}, 
   3.767002017518767*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{"%40", ",", "\[Epsilon]"}], "]"}]], "Input",
 CellChangeTimes->{{3.767002021731274*^9, 3.767002021876979*^9}},
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"2496", "-", 
  RowBox[{"3632", " ", "f"}], "+", 
  RowBox[{"2112", " ", 
   SuperscriptBox["f", "2"]}], "-", 
  RowBox[{"612", " ", 
   SuperscriptBox["f", "3"]}], "+", 
  RowBox[{"88", " ", 
   SuperscriptBox["f", "4"]}], "-", 
  RowBox[{"5", " ", 
   SuperscriptBox["f", "5"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"6112", "-", 
     RowBox[{"8400", " ", "f"}], "+", 
     RowBox[{"4568", " ", 
      SuperscriptBox["f", "2"]}], "-", 
     RowBox[{"1224", " ", 
      SuperscriptBox["f", "3"]}], "+", 
     RowBox[{"160", " ", 
      SuperscriptBox["f", "4"]}], "-", 
     RowBox[{"8", " ", 
      SuperscriptBox["f", "5"]}]}], ")"}], " ", "\[Epsilon]"}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"6272", "-", 
     RowBox[{"8208", " ", "f"}], "+", 
     RowBox[{"4112", " ", 
      SuperscriptBox["f", "2"]}], "-", 
     RowBox[{"964", " ", 
      SuperscriptBox["f", "3"]}], "+", 
     RowBox[{"100", " ", 
      SuperscriptBox["f", "4"]}], "-", 
     RowBox[{"3", " ", 
      SuperscriptBox["f", "5"]}]}], ")"}], " ", 
   SuperscriptBox["\[Epsilon]", "2"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"3456", "-", 
     RowBox[{"4384", " ", "f"}], "+", 
     RowBox[{"2016", " ", 
      SuperscriptBox["f", "2"]}], "-", 
     RowBox[{"396", " ", 
      SuperscriptBox["f", "3"]}], "+", 
     RowBox[{"28", " ", 
      SuperscriptBox["f", "4"]}]}], ")"}], " ", 
   SuperscriptBox["\[Epsilon]", "3"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1024", "-", 
     RowBox[{"1280", " ", "f"}], "+", 
     RowBox[{"544", " ", 
      SuperscriptBox["f", "2"]}], "-", 
     RowBox[{"88", " ", 
      SuperscriptBox["f", "3"]}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["f", "4"]}]}], ")"}], " ", 
   SuperscriptBox["\[Epsilon]", "4"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"128", "-", 
     RowBox[{"160", " ", "f"}], "+", 
     RowBox[{"64", " ", 
      SuperscriptBox["f", "2"]}], "-", 
     RowBox[{"8", " ", 
      SuperscriptBox["f", "3"]}]}], ")"}], " ", 
   SuperscriptBox["\[Epsilon]", "5"]}]}]], "Output",
 CellChangeTimes->{3.7665135116047297`*^9, 3.7665139509015512`*^9, 
  3.767002022350346*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"b", ">", "0"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7670022804957886`*^9, 3.767002285651673*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"TH1", "-", "TH2"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"f", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7665019095712605`*^9, 3.766501919886555*^9}, {
   3.766502374334895*^9, 3.766502376531595*^9}, {3.7665028204781694`*^9, 
   3.766502846478366*^9}, {3.7665052040922165`*^9, 3.7665052099354415`*^9}, 
   3.7665053709207263`*^9, {3.767002087863614*^9, 3.7670020979772687`*^9}},
 NumberMarks->False],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
780Yq3+9wwSePdj4f8RFfDvrYwLPx9j4Xy4d8uJKgTE8h7DxX8wI3KLzzgie
tdn4g703Llj1xRCe/WO2/s3VLmdERg8N+TP/Zv1sTUJl3nOG4796ooH/Mnhe
Nn2WUzr3OdO9Zs0ZnrEO/M4O+85opz9jOscqmlRuNYBnvOcFvhy/9bwRPHdM
2vwjz7OMiWhaIDtQ1ASe3/lZl3tW/vI5asdfNqUm8JzI5rV+9sq/+bDxFxgH
zpB6YQPPFmz8YZIxU7d/sYFndTb+Rf1U5XLP28DzDDb+tvLLK57OsoHnYWz8
5ZozHIa4WsNzOxv/gqyWRxt8reC5ho3fdNCPGTvNLeFZ4ZP8dc/KCkakbVvp
n/m3sbyO/VztCobzVaXjqJoOPAs2346ozHvFCDqi0xQqjeD5w9ttluncV0z3
zJuJ+1NM4ffRAntl7fSXzOX5m+ZHGFnAM3xvL1tXrWsFz/sr21vyPF8wP65q
h8TssobnZWxeq7NX/k2OjT/TeVzGxg1O8DyKjT9i/cxd7med4LmTjb9wV+h+
qUNO8PyejT/MMCqtzMEJnu+z8f/sE3Pb74cjPOey8S8+bZZx0McRnjPZ+EPf
bJrc+kCY52wwvl+V5/mGEal9+fnP/FvZ0d35npWvGX7VnLduCsL8W2G7806u
9msm6tjVmG+h5vB8WFfJvzKvmukyUd4f72cDzyn7ugzSudWMdFGF11UZe/j1
//eunHZ6FRP5gNeSleAAz/Sp+lNWkB7hCM/02dEr/1bPxq/aahBnemQdPD9m
4+/4JK147/s6eL7Exl9QzCjxu9bB8wE2/lDt+2NH3FwHz0ls/JcqM4tCLdbB
sw8b/6UTcr6Lr66FZws2fsnnr7XjB6yF5zLKF254s/7P/NvKARnrKvP+YTim
igdE+wvzb4WKIi/zPP9hug39PurI2cKzopXbinTuLz5MZuIFM0d4PhL3INez
sobJOpj30qPaGZ4lT86bqp1ew0RYTdiee9UVflPL92zlatcw1icP1SwetxZ+
bdm81s9e+Tf6HDKy6uCqUGH+bQUbf1aEWGppgQ88F7Dx623zPZVz3wee5dn4
O69rTtuf5wPPh9j4q/LuuptH+8DzGDZ+lZ0lQ/6W8xHm7dn4dxpPteUlesOz
UnqfJK72e0aEvyjpz/zbUTZefsoZr5Lr1vA8rvaRc2XeO4a5d6lwv4QTPG8a
qlyW5/mO6bZrbKtZ7AbPoosyNdK57xibtDyp21Hr4TnIQfSMZ+VbJlzyedu1
nx7w/GnjWmnt9LeMlbeeIveOFzxfZvNanb3yb4ps/E1G98dxngTAM32q6jlO
ylYMhGdJNv6IBu0vGqaB8JzKxh8+7Pg9Sa1AeOaw8Uudcty8YnggPAew8Rfw
o2MrLwbAcz0b/6epYi/bNQLgefOKp6O00+uYmImWE/7Mv/XxWRTH1a5j+H/v
dpVfKcy/BbPxdhd5qoVdd4Pnxmt97SvzapnIW25vK0Q94dm+cf3DPM9aRr/l
ZkDrdh94fjb6iWo6t5apXr9gcMwcP3jWYhae8Kx8z9yfOWjlNyt/eB7P5rU6
e+XfNrHxR8x43T32eyj8irLxTyipyqkPC4Nn+gyP7CtheDEMnj+x8f8csDvB
LS8Mnm3Z+K1kryrXx4TB81M2/lcuU3L1p4QJ50fY+Bc/nsrp2hcKz00/Dxz0
rKxnRCbsGv5n/s2BO2CYdno9w1E7/eovLWH+7fkqzyiudj2zb/zY7UUGnvCs
w8ZbdD4v0KjBF56LDiy2rsz79Xd5+bDFo/gAeJ57b//dPM8PzJqqT2uHJAfB
c3Zrv0Xp3A9MY+NaDcnBIfAcwua1wnvl3xrZ+OWbMrdy+gnzb/Zs/NUpQ8QV
bPnw+4yNP+twtrh1Ch+e6XPNjjaXidv48HyZjT9+LVePCefDsyIbv0ea/71H
Wnx4PsLGn3vvePNCDh+edU97y6dzG5irNac4f+bfil8+z/Ss/MTw7bf2kRes
g+d5oqqDtdM/MYJW9V3uv3yS52OzD4VytT8x3XMmaJe3BMLzBDbe6rcFxenT
Q+F5S5SXWWXeR6ZqZFh68IlweO577NmNPM+PTKXGxMsr0iPhuZzNa/F65d90
2Phdrvos+HtPHDwXsfE/uL7hwV9Dhfm3uWz8OdzJwWn68fCbzcbfmX3hItch
Hp7p0ylFPElzVTw8b2LjT5mwTvqTZDw8i7Lxu0+/98zwrjDP+beTWmGeZxMT
s7DE9s/828S0IzPTuU0M51aGc3uCtzAvlDdot2dlI1O8fNXC5uJAeO5f49Nf
O72R6RY50kf2rzB4Dhv4IoCr3cjI7dvz1GRPFDw3s/Huq//BHVXBh2dHm8NG
lXkNzLR8tx1WA2PheT6b14rolX87xsY/eujtabMfJcLzBDb+nFE/80a4Jgnf
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
CdKD+Q==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
          "]], Polygon3DBox[CompressedData["
1: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
          "]], Polygon3DBox[CompressedData["
1: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
I/Ls2D/YBuO/Ay3T4QI=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rsvpFEYwOGPcRsMK6Jd0RAFpSgoN4pViSjoiGK3WIlsQakQOh1/AS0R
+k3o3MfMuM2ystkIu2Tjfg3PSRS/eU7mO5nznsxX0zvQ8S0niqJR3SqsL/Vb
87lR9IE/WM0NNvKQrTxnO5/Zw9JYFCX01bqew2zmONs4xS7OsJ+L/M5l/ucJ
77Wta/3TioFSXGWaa8xwnTthJu5yk3vcYlL74Xd4wBSzTPMnMzzkDo+4y1+c
dY9TPuhYN+GOmjBbkiNc4iAX2MdpdnKSnzjGJg6xjrX6Yh1nNx+d8Zl/2cIs
G8K9+JEX9v3hncp1FfaqyoxlrGSCFSwNe1jCBItZwng4j0UsYL4KrWMsCP9x
+I6vytNLeKYnGSOa83H2/j68Acy/Svc=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 1004, 473, 689, 1113, 912, 691, 1114, 913, 692, 1115, 
       914, 693, 1116, 915, 694, 1117, 916, 695, 1118, 1010, 1217, 696, 1119, 
       917, 697, 1120, 918, 698, 1121, 919, 699, 1122, 920, 700, 1123, 921, 
       701, 1124, 922, 702, 1322, 1005, 923, 1006}], 
      Line3DBox[{704, 1011, 1218, 703, 488, 705, 1125, 924, 706, 1126, 925, 
       707, 1127, 926, 708, 1128, 927, 709, 1129, 1012, 1219, 710, 1013, 1220,
        711, 1130, 928, 712, 1131, 929, 713, 1132, 930, 714, 1133, 931, 715, 
       1134, 932, 716, 1135, 933, 717}], 
      Line3DBox[{719, 1014, 1221, 718, 1015, 1222, 720, 504, 721, 1136, 934, 
       722, 1137, 935, 723, 1138, 936, 724, 1139, 1016, 1223, 725, 1017, 1224,
        726, 1018, 1225, 727, 1140, 937, 728, 1141, 938, 729, 1142, 939, 730, 
       1143, 940, 731, 1144, 941, 732}], 
      Line3DBox[{734, 1019, 1226, 733, 1020, 1227, 735, 1021, 1228, 736, 520, 
       737, 1145, 942, 738, 1146, 943, 739, 1147, 1022, 1229, 740, 1023, 1230,
        741, 1024, 1231, 742, 1025, 1232, 743, 1148, 944, 744, 1149, 945, 745,
        1150, 946, 746, 1151, 947, 747}], 
      Line3DBox[{749, 1026, 1233, 748, 1027, 1234, 750, 1028, 1235, 751, 1029,
        1236, 752, 536, 753, 1152, 948, 754, 1153, 1030, 1237, 755, 1031, 
       1238, 756, 1032, 1239, 757, 1033, 1240, 758, 1034, 1241, 759, 1154, 
       949, 760, 1155, 950, 761, 1156, 951, 762}], 
      Line3DBox[{764, 1035, 1242, 763, 1036, 1243, 765, 1037, 1244, 766, 1038,
        1245, 767, 1039, 1246, 768, 552, 769, 1157, 1040, 1247, 770, 1041, 
       1248, 771, 1042, 1249, 772, 1043, 1250, 773, 1044, 1251, 774, 1045, 
       1252, 775, 1158, 952, 776, 1159, 953, 777}], 
      Line3DBox[{781, 1160, 954, 779, 1161, 955, 783, 1162, 956, 785, 1163, 
       957, 787, 1164, 958, 789, 1165, 959, 791, 1166, 569, 793, 1167, 960, 
       795, 1168, 961, 797, 1169, 962, 799, 1170, 963, 801, 1171, 964, 803, 
       1172, 965, 805, 1174, 967, 807}], 
      Line3DBox[{806, 966, 1173, 804, 1265, 1057, 802, 1264, 1056, 800, 1263, 
       1055, 798, 1262, 1054, 796, 1261, 1053, 794, 1260, 1052, 792, 1259, 
       568, 790, 1258, 1051, 788, 1257, 1050, 786, 1256, 1049, 784, 1255, 
       1048, 782, 1254, 1047, 778, 1253, 1046, 780}], 
      Line3DBox[{809, 1058, 1266, 808, 1175, 968, 810, 1176, 969, 811, 1177, 
       970, 812, 1178, 971, 813, 1179, 972, 814, 1180, 1059, 1267, 815, 585, 
       816, 1181, 973, 817, 1182, 974, 818, 1183, 975, 819, 1184, 976, 820, 
       1185, 977, 821, 1186, 978, 822}], 
      Line3DBox[{824, 1060, 1268, 823, 1061, 1269, 825, 1187, 979, 826, 1188, 
       980, 827, 1189, 981, 828, 1190, 982, 829, 1191, 1062, 1270, 830, 1063, 
       1271, 831, 601, 832, 1192, 983, 833, 1193, 984, 834, 1194, 985, 835, 
       1195, 986, 836, 1196, 987, 837}], 
      Line3DBox[{839, 1064, 1272, 838, 1065, 1273, 840, 1066, 1274, 841, 1197,
        988, 842, 1198, 989, 843, 1199, 990, 844, 1200, 1067, 1275, 845, 1068,
        1276, 846, 1069, 1277, 847, 617, 848, 1201, 991, 849, 1202, 992, 850, 
       1203, 993, 851, 1204, 994, 852}], 
      Line3DBox[{854, 1070, 1278, 853, 1071, 1279, 855, 1072, 1280, 856, 1073,
        1281, 857, 1205, 995, 858, 1206, 996, 859, 1207, 1074, 1282, 860, 
       1075, 1283, 861, 1076, 1284, 862, 1077, 1285, 863, 633, 864, 1208, 997,
        865, 1209, 998, 866, 1210, 999, 867}], 
      Line3DBox[{869, 1078, 1286, 868, 1079, 1287, 870, 1080, 1288, 871, 1081,
        1289, 872, 1082, 1290, 873, 1211, 1000, 874, 1212, 1083, 1291, 875, 
       1084, 1292, 876, 1085, 1293, 877, 1086, 1294, 878, 1087, 1295, 879, 
       649, 880, 1213, 1001, 881, 1214, 1002, 882}], 
      Line3DBox[{884, 1088, 1296, 883, 1089, 1297, 885, 1090, 1298, 886, 1091,
        1299, 887, 1092, 1300, 888, 1093, 1301, 889, 1215, 1094, 1302, 890, 
       1095, 1303, 891, 1096, 1304, 892, 1097, 1305, 893, 1098, 1306, 894, 
       1099, 1307, 895, 665, 896, 1216, 1003, 897}], 
      Line3DBox[{911, 1009, 685, 910, 1321, 1111, 909, 1320, 1110, 908, 1319, 
       1109, 907, 1318, 1108, 906, 1317, 1107, 905, 1316, 1106, 904, 1315, 
       1314, 1105, 903, 1313, 1104, 902, 1312, 1103, 901, 1311, 1102, 900, 
       1310, 1101, 899, 1309, 1100, 898, 1112, 1308, 1007, 1008}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1113, 252, 488, 280, 1222, 503, 295, 1227, 518, 
       310, 1234, 533, 325, 1243, 548, 340, 1254, 563, 1161, 355, 578, 1175, 
       370, 1269, 593, 385, 1273, 608, 400, 1279, 623, 415, 1287, 638, 430, 
       1297, 653, 445, 1309, 668, 460}], 
      Line3DBox[{253, 475, 1114, 254, 489, 1125, 281, 504, 296, 1228, 519, 
       311, 1235, 534, 326, 1244, 549, 341, 1255, 564, 1162, 356, 579, 1176, 
       371, 594, 1187, 386, 1274, 609, 401, 1280, 624, 416, 1288, 639, 431, 
       1298, 654, 446, 1310, 669, 461}], 
      Line3DBox[{255, 476, 1115, 256, 490, 1126, 282, 505, 1136, 297, 520, 
       312, 1236, 535, 327, 1245, 550, 342, 1256, 565, 1163, 357, 580, 1177, 
       372, 595, 1188, 387, 610, 1197, 402, 1281, 625, 417, 1289, 640, 432, 
       1299, 655, 447, 1311, 670, 462}], 
      Line3DBox[{257, 477, 1116, 258, 491, 1127, 283, 506, 1137, 298, 521, 
       1145, 313, 536, 328, 1246, 551, 343, 1257, 566, 1164, 358, 581, 1178, 
       373, 596, 1189, 388, 611, 1198, 403, 626, 1205, 418, 1290, 641, 433, 
       1300, 656, 448, 1312, 671, 463}], 
      Line3DBox[{259, 478, 1117, 260, 492, 1128, 284, 507, 1138, 299, 522, 
       1146, 314, 537, 1152, 329, 552, 344, 1258, 567, 1165, 359, 582, 1179, 
       374, 597, 1190, 389, 612, 1199, 404, 627, 1206, 419, 642, 1211, 434, 
       1301, 657, 449, 1313, 672, 464}], 
      Line3DBox[{261, 479, 1118, 263, 493, 1129, 285, 508, 1139, 300, 523, 
       1147, 315, 538, 1153, 330, 553, 1157, 345, 568, 1166, 360, 583, 1180, 
       375, 598, 1191, 390, 613, 1200, 405, 628, 1207, 420, 643, 1212, 435, 
       658, 1215, 450, 1314, 673, 465}], 
      Line3DBox[{265, 481, 1119, 266, 1220, 495, 287, 1224, 510, 302, 1230, 
       525, 317, 1238, 540, 332, 1248, 555, 347, 1260, 570, 1167, 362, 585, 
       377, 1271, 600, 392, 1276, 615, 407, 1283, 630, 422, 1292, 645, 437, 
       1303, 660, 452, 1316, 675, 467}], 
      Line3DBox[{267, 482, 1120, 268, 496, 1130, 288, 1225, 511, 303, 1231, 
       526, 318, 1239, 541, 333, 1249, 556, 348, 1261, 571, 1168, 363, 586, 
       1181, 378, 601, 393, 1277, 616, 408, 1284, 631, 423, 1293, 646, 438, 
       1304, 661, 453, 1317, 676, 468}], 
      Line3DBox[{269, 483, 1121, 270, 497, 1131, 289, 512, 1140, 304, 1232, 
       527, 319, 1240, 542, 334, 1250, 557, 349, 1262, 572, 1169, 364, 587, 
       1182, 379, 602, 1192, 394, 617, 409, 1285, 632, 424, 1294, 647, 439, 
       1305, 662, 454, 1318, 677, 469}], 
      Line3DBox[{271, 484, 1122, 272, 498, 1132, 290, 513, 1141, 305, 528, 
       1148, 320, 1241, 543, 335, 1251, 558, 350, 1263, 573, 1170, 365, 588, 
       1183, 380, 603, 1193, 395, 618, 1201, 410, 633, 425, 1295, 648, 440, 
       1306, 663, 455, 1319, 678, 470}], 
      Line3DBox[{273, 485, 1123, 274, 499, 1133, 291, 514, 1142, 306, 529, 
       1149, 321, 544, 1154, 336, 1252, 559, 351, 1264, 574, 1171, 366, 589, 
       1184, 381, 604, 1194, 396, 619, 1202, 411, 634, 1208, 426, 649, 441, 
       1307, 664, 456, 1320, 679, 471}], 
      Line3DBox[{275, 486, 1124, 276, 500, 1134, 292, 515, 1143, 307, 530, 
       1150, 322, 545, 1155, 337, 560, 1158, 352, 1265, 575, 1172, 367, 590, 
       1185, 382, 605, 1195, 397, 620, 1203, 412, 635, 1209, 427, 650, 1213, 
       442, 665, 457, 1321, 680, 472}], 
      Line3DBox[{277, 682, 1322, 683, 278, 501, 1135, 293, 516, 1144, 308, 
       531, 1151, 323, 546, 1156, 338, 561, 1159, 353, 576, 1173, 1174, 368, 
       591, 1186, 383, 606, 1196, 398, 621, 1204, 413, 636, 1210, 428, 651, 
       1214, 443, 666, 1216, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1308, 444, 652, 1296, 429, 637, 1286, 414, 
       622, 1278, 399, 607, 1272, 384, 592, 1268, 369, 577, 1266, 354, 1160, 
       562, 1253, 339, 547, 1242, 324, 532, 1233, 309, 517, 1226, 294, 502, 
       1221, 279, 487, 1218, 250, 473, 681, 688}], 
      Line3DBox[{466, 674, 1315, 451, 659, 1302, 436, 644, 1291, 421, 629, 
       1282, 406, 614, 1275, 391, 599, 1270, 376, 584, 1267, 361, 569, 1259, 
       346, 554, 1247, 331, 539, 1237, 316, 524, 1229, 301, 509, 1223, 286, 
       494, 1219, 264, 480, 1217, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
nw==
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{412.2363366777924, 279.67328365974834`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 1}, {0, 1}, {0., 0.017222550550226923`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.9550088502252274`, -0.9164070246316142, 1.3704454970178157`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.7665019067901525`*^9, 3.766501921133101*^9}, 
   3.7665023770097284`*^9, {3.766502835448927*^9, 3.766502847368808*^9}, {
   3.7665052061700926`*^9, 3.76650521079478*^9}, 3.766505371920632*^9, 
   3.7665102945871215`*^9, {3.767002090523455*^9, 
   3.767002098974414*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
985tLe8nmaAnR9Pbl6M2rozHAPxdptr/qeXUW8C+irNzhLCXj6kfbpYwa2a1
R3WMJB/E6L8RIW5huSqE5Uqo4dRKd7/8MljpjvJKA/aw16sQioPd/mKw228x
3Ftw8DMbDvTSC3Z7OXoObjhtdOLxIsTbOJ//JWjXZ9foPB0hntmiG8Vw1sfR
vH3Vr2mq3gVwtZ85QxfdTAHYtMipVfuK6bisxtfh1sFNnwFye03nvNIc2yfD
ihpDapYn6218JV4JlKrnnWpW2ubqfItDLh534nWzvhD7/7nzLZ+zzZ6V/yI6
BKnTk5CaNefmDmuG7tNL7+5Ar4XQkiB+NTr/4LrcJ5z+wn7b8xe+mA6J9dN7
1qttsF5LYMb5d0y4/ZSTbT+lg43JN0y4WclDKD23SberxaJuuNpGJe7XwXR6
AXBpCE7n22KkbQy9f77dZ89c/cqb/CDm3SqUdfh8BS3K97dqZn0JDBe2ZgYv
g9QcK1DLQyySATW/vbmljNXd1uja8XMeiVJv+5uql6Nutm/qMfa8CWYLqrvz
bUbApUi2cxDnwK1ZDAyzvUCnGygVvMZAfzm6eQN0+HNnRheb6jg3I9n1tKAX
JTfcJspZbnoW8TRm2X3xDI2Ul8FWLjXBbiG2X3zGVXKZqmRF8OexYP7psWtP
w5hurqFTT/tzMJdVG59n2vg8rpSRthkLvaVqegroNuky7mfnYQKuBs6ZmUsd
XEZ8FwHfmqFDJ5uKpxFMLwDqfLTtSLHQHd7F6MGT8ciDJw1Hy94VcP77rw7m
C8OMfqUzu2QhKunzDhbz+rwP1NUkFNvKGEFxBdgWnkITE2cyroLNdbeNn/lC
mJbeLVMoo5SeZHt+yzfW9Pm4t+Vy/rySendcHLOvyM0B3Kx06PqkWMt2zgqf
/WIknBEyTwn8hOXWefmuL4fB0XLlBbr0h4dY+D4kfuETD6l0c+jcSlXtR453
wMFyLlOcNgGaFZo0u54lS7XspRG0Zi1bRzCjLVBWAa19urg14QnL+WKzi/Gf
EBb0mk99E2o3rT/QwAm8ahz82XHUfpHa9YuY0KLKvSAEuS0pPitMAz9jGW/4
/8xq1bvj6J1VTTy+1LUETO2rfg5JcuOAdaw+dRpd3ejuZu05sidP07UwJkwA
Ym6uQyB7eZwLYh9HGq1D2AzqR2EZO2YZHZsBZgcBrhmRC7hSI08F4FbAbQ7g
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
AGkv8ials8vOriW753d+7y6ybwy3vDsSu2LnH3pLwWJfWAbhVJD3k7AJExon
qlmlpOmWq4n/q/0rHryAgRwh5jVH9Xod3E8xIB99eMd3fHdg6Iva3ywuhuX3
2RxO/zB8n9w2wXeuAeUuX1T7Vwk2rkm1qCX1+2Qm94/UcvrBC0zKLSjDFyrs
Cx3+u3Fb0KLDKEj3fnSGS79Sp43eQbZN4WvyZ0gpqArdXPvQt2CD9kN/pwCR
zO0O8prfToqMxlXUYFeb86MUXAB6yZ2LfrcoR/7yXT90evHkd3YtPeasRdIc
GN45V/jKcA1GzV+dC2P3/o7+Lt37x48NWfz4awM3fXhyP9429jW2hH6u6Xhs
H3oce7PY49Udt3zkl+rxyvBdPz65nzdM6ues0M8VyS3OuNZj3Fp34tjHfj6a
DKvf0pWx8Yl2310bQvPWra2+u3MLrthTf413bfc3Nud9ZburdPgar7at2RXJ
cPWenm68SOvp1i1XtfuJe8/yhnM6nrk0vMW1ydOtN39dx4M8nt1x4ZKODjr6
9tvjTpQ8P7fjlos72j61lx673rbr+19obSmmr5vc9/yO2ye+9wVhbG/Ye49j
b9vV4/kdY7uHvruWZ/LKeR03d7XduPe+x967q59zwkh85lfU49mhx1u0x8jr
E0f0/I4L2zvafrke1YCsU3HGPyPCbe3O06/dEBUXTOy82cZRuH1P3TbeeXK3
TbEmfdzR7jTN7Wm864XhFtOpcsdde3q68Urx6U3h6buTp1vPxG3qeH5xON0Y
nr5nL093vcVFoZ8ux2cPPU413+eScOoRmxR/O/fST9ebxW+4NnzD+yf346mN
Y7CPb5ZOODgh96HHsTeLPXZNm+2a3KMnNoy946Whx9Xhuz6k/cSdrieOVHx6
VfIBfksZenz4NfS4MtS6flpzrMeJY3ZZR4+epJAOxyO/VI95+K6PtftJs9Eb
KP5wRz9Z3LYEZ4/vqbPGS8XOVoVXeTJ5uvUCvUkv1WXpLA89PjXeo9/U62ib
2OOy0ONnJ/dYh6/E84933HJCR9veeux6x491XFhibSmTPD2576r5tp/ouOX4
8K2f2Us/Xe/Y9f2PS9qcjHvo23+ieUwMdL3t4o62L+y977H37ur7mDASX9Ie
o13q33/sHS/v6Ofo0M+XJ/Uz9j5d/RzV0fbL9agbDlUNu8RdIXbE27u6jOuK
Hm6/wcQx/mTHhUPDY1lzL6TKXi252a/v8ceOH/rVvU7Kr/v6u+H7et+u9mum
NzVk3RXhlsPslpTpuoRF1+d16Yn0HbrI2zVo8W1sqLbse7LjXt9h4swO61eF
j/5Q+OguTfOaPrqbmVi5OnzuIR297OsbdDFG1yg/kL5V+3YfivhKB9t9KU90
2S0TX6lqY3h87oj/rwkf+QGtyYWulRj7+t0f6f7IL9ved82PPCjpwMGxrx/e
Jb12dw9yIPm14ZMP7Hh6nvU7WTR1fho9xiKRLX6dx0jS94fxfb0+4XxOeDyY
dNa1LXdr5N4XOvtu8mDCMOE7fyo88949fL/vd/cSPrndS5OyUv+zV9cBv9wP
Jr86v1p0rC9vfXyTZayfN+pgUllSvY17jV0/efrn+vT+zafjZ2/reCbOSPxI
n+Y+yVXH02s7nn5XePrH+vSfTPrsEzue7prxsX4OnfQWx3U84zNdKal+ov0s
njSSh3X08/bwbf5an1416du8r+PpdC8Rp6f1c2bop2z207UjfdduDH+j/Wyd
9D5dSfmaJFC2Qzr8fn+r/V08aZS7AuAxV7dlCP1MO7t80lB3xS4anaUXrLPr
Jn3T35jcmTT9XJ++veNV/lPHgzG15V/rg7s6PvY/dDyY5kQ6ra2LJzvG9N+F
b9uVTPkLffBLHZ/9s/Cgz3enPP4P+uDLHZ/4o/BgzCb+7/T273cMznfC7V2p
9PbgX3W84Ivhwa4pvn/UB38RHozs/0x48I3hBf+93v5PHZ/zSLhdZexEQ+x/
0D7+z44xubfZR5uV8dw/6dP/uWOIbul+Ov269vRIP3v8S1zT7kIu/E/JM/M7
Pvaj4Zmu2Gj69G91fOJ54emuMOb/nDz9to4Bi5Oz0+F9/9fkmfd0fGJcJ5ca
eY6R9OkPdHziMnsm5fIu+/V/S/o5smPU6NC27MQvdzvF/0fS1QkdX+jgjq62
YD9yH5H/K+ngtI53+aPuDroswbSrjR3v8vburrqs9P+YdHVex0h3CSKe/d/J
gx/p+DoatKja70A4/Kfk2Ws6PrQd3IL2+H+SZz7T/DwLCUrt/01uYkybau0/
J638u/vX3sD6PsQgUi67q2MEfTT2FDj435M+7uz4tF/G2/8P/63v/9b3f0V9
/yowErE5DLUUh/GmfWnIfuP/B0TxfJk=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"SUMMARY_", "1"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Epsilon]", ">=", "0"}], "&&", 
     RowBox[{"1", ">=", "f", ">=", "0"}]}], ",", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"TH1", "-", "TH2"}], ">", "0"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7664957353585773`*^9, 3.7664957717069454`*^9}, {
   3.7664960698059855`*^9, 3.7664961169642887`*^9}, {3.766500732467552*^9, 
   3.766500765148634*^9}, {3.7665010775931034`*^9, 3.766501087508543*^9}, 
   3.766501303201734*^9, {3.766501964555543*^9, 3.76650197102385*^9}, {
   3.7665020046190796`*^9, 3.7665020150558605`*^9}, {3.7665022387769938`*^9, 
   3.7665022408238163`*^9}, {3.766502854071556*^9, 3.7665028542277412`*^9}, 
   3.76650553160499*^9, 3.7665064427823195`*^9, 3.7665064766095533`*^9, {
   3.7665083142269115`*^9, 3.766508327493284*^9}, {3.766508416040626*^9, 
   3.7665084178686037`*^9}, {3.767002292919668*^9, 3.7670023018180876`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", " ", "\[Epsilon]"}], ">", "0"}]], "Output",
 CellChangeTimes->{3.7665103013831224`*^9, 3.7670021101989164`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"SUMMARY_", "2"}], "*)"}]], "Input",
 CellChangeTimes->{{3.767002309786368*^9, 3.7670023132499857`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Epsilon]", ">", "0"}], "&&", 
    RowBox[{"f", "==", "0"}]}], ",", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"TH1", "-", "TH2"}], "==", "0"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7665021553549337`*^9, 3.7665021669528756`*^9}, {
   3.766502222568226*^9, 3.7665022513446045`*^9}, {3.7665028612169275`*^9, 
   3.766502861357648*^9}, 3.7665055327208834`*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.766502162197879*^9, 3.7665021756322885`*^9}, {
   3.7665022089931903`*^9, 3.766502252047596*^9}, 3.7665028626230574`*^9, 
   3.7665052156198177`*^9, 3.7665103036287365`*^9, 3.767002114255313*^9}]
}, Open  ]]
},
WindowSize->{1920, 997},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{594.9599999999999, 842.04}},
Magnification:>1.6 Inherited,
FrontEndVersion->"10.2 for Microsoft Windows (64-bit) (July 29, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 410, 8, 47, "Input"],
Cell[970, 30, 1885, 49, 251, "Input"],
Cell[2858, 81, 1441, 34, 315, "Input"],
Cell[CellGroupData[{
Cell[4324, 119, 193, 3, 47, "Input"],
Cell[4520, 124, 11076, 232, 434, "Output"]
}, Open  ]],
Cell[15611, 359, 1604, 22, 47, "Input"],
Cell[17218, 383, 859, 24, 91, "Input"],
Cell[18080, 409, 9647, 264, 401, "Input"],
Cell[27730, 675, 794, 16, 77, "Input"],
Cell[CellGroupData[{
Cell[28549, 695, 310, 5, 47, "Input"],
Cell[28862, 702, 11456, 303, 294, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40355, 1010, 85, 2, 47, "Input"],
Cell[40443, 1014, 3764, 111, 124, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44244, 1130, 82, 2, 47, "Input"],
Cell[44329, 1134, 6527, 181, 200, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50893, 1320, 172, 4, 47, "Input"],
Cell[51068, 1326, 5662, 162, 264, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56767, 1493, 155, 3, 47, "Input"],
Cell[56925, 1498, 3767, 111, 124, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60729, 1614, 150, 3, 47, "Input"],
Cell[60882, 1619, 3782, 103, 149, "Output"]
}, Open  ]],
Cell[64679, 1725, 4085, 109, 178, "Input"],
Cell[68767, 1836, 344, 9, 77, "Input"],
Cell[CellGroupData[{
Cell[69136, 1849, 235, 5, 47, "Input"],
Cell[69374, 1856, 2616, 82, 124, "Output"]
}, Open  ]],
Cell[72005, 1941, 187, 4, 47, "Input"],
Cell[CellGroupData[{
Cell[72217, 1949, 153, 3, 47, "Input"],
Cell[72373, 1954, 6362, 184, 221, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78772, 2143, 152, 3, 47, "Input"],
Cell[78927, 2148, 5652, 153, 221, "Output"]
}, Open  ]],
Cell[84594, 2304, 6428, 163, 309, "Input"],
Cell[CellGroupData[{
Cell[91047, 2471, 173, 4, 47, "Input"],
Cell[91223, 2477, 985, 28, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92245, 2510, 2366, 65, 229, "Input"],
Cell[94614, 2577, 2761, 76, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97412, 2658, 181, 4, 47, "Input"],
Cell[97596, 2664, 2172, 68, 89, "Output"]
}, Open  ]],
Cell[99783, 2735, 142, 3, 47, "Input"],
Cell[CellGroupData[{
Cell[99950, 2742, 564, 12, 47, "Input"],
Cell[100517, 2756, 153631, 2518, 471, 81330, 1332, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[254185, 5279, 1049, 20, 77, "Input"],
Cell[255237, 5301, 150, 3, 47, "Output"]
}, Open  ]],
Cell[255402, 5307, 144, 3, 47, "Input"],
Cell[CellGroupData[{
Cell[255571, 5314, 463, 11, 47, "Input"],
Cell[256037, 5327, 249, 3, 47, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
